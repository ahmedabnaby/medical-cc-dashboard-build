{"version":3,"sources":["views/pages/ConfirmDeleteModal.js","views/pages/Doctors.js"],"names":["ConfirmDeleteModal","props","_useState","useState","_useState2","_slicedToArray","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","method","url","concat","patient","id","then","response","window","location","reload","catch","alert","stop","apply","arguments","_jsx","_Fragment","children","Container","Grid","container","spacing","gridSpacing","item","xs","_jsxs","Card","className","CardHeader","title","Divider","CardContent","style","top","overflowY","height","Button","onClick","handleClose","sm","SubCard","full_name","is_doctor","color","useStyles","makeStyles","table","minWidth","searchControl","width","paddingRight","paddingLeft","marginBottom","marginTop","createData","name","calories","fat","carbs","protein","Doctors","classes","BASE_URL","_React$useState","React","_React$useState2","doctors","setDoctors","_React$useState3","_React$useState4","selectedDoctor","setSelectedUser","_React$useState5","_React$useState6","value","setValue","_React$useState7","_React$useState8","visible","setVisibility","_React$useState9","_React$useState10","showDeleteModal","setShowDeleteModal","fetchDoctors","get","data","fetchSearch","_ref2","_callee2","_context2","formatDate","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","useEffect","Fragment","ShowSelectedDoctor","doctor","direction","justifyContent","alignItems","marginRight","OutlinedInput","onChange","event","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","aria-describedby","inputProps","labelWidth","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","whiteSpace","TableBody","filter","user","map","index","component","iqama_number","date_of_birth","mobile_number","email","nationality","scfhs_registration","current_employer_name","current_employer_license_num","current_employer_city","current_employer_website","is_verified","created_at","last_login","showSelectedDoctor","src","_React$useState11","_React$useState12","_React$useState13","_React$useState14","userId","setUserId","_ref3","_callee3","_context3","handleSubmit","_ref4","_callee4","bodyFormData","_context4","FormData","append","headers","console","log","_x","displayImg","imgSrc","document","getElementById","display","hideImg","MuiTypography","variant","gutterBottom","copy_of_iqama_number","cursor","textDecoration","copy_of_scfhs_registration_card","href","cv","personal_photo","type","disableElevation","_formattedDate$split3","_formattedDate$split4","onSubmit","e","preventDefault","undefined","contract","files","no_objection_letter","additional_attachment"],"mappings":"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","file":"static/js/15.e91ec384.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container, ListGroup} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\n\r\nexport const ConfirmDeleteModal = (props) => {\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleDelete = async () => {\r\n        await axios({\r\n            method: 'DELETE',\r\n            url: `${BASE_URL}/user/${props?.patient.id}/delete`\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload();\r\n            })\r\n            .catch(function (response) {\r\n                alert('An error occured!');\r\n            });\r\n    };\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleClose}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props?.patient.full_name}>\r\n                                            <h2>Are you sure you want to delete this {props?.is_doctor ? 'doctor?' : 'patient?'}</h2>\r\n                                            <Button style={{color: 'red'}} onClick={handleDelete}>\r\n                                                Yes\r\n                                            </Button>\r\n                                            <Button style={{color: 'green'}} onClick={props?.handleClose}>\r\n                                                No\r\n                                            </Button>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button, OutlinedInput, InputAdornment} from '@material-ui/core';\r\n\r\nimport {gridSpacing} from '../../store/constant';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {IconSearch} from '@tabler/icons';\r\n\r\nimport axios from 'axios';\r\n\r\nimport MuiTypography from '@material-ui/core/Typography';\r\n\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport {ConfirmDeleteModal} from './ConfirmDeleteModal';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return {name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9)\r\n];\r\n\r\nexport default function Doctors() {\r\n    const classes = useStyles();\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [doctors, setDoctors] = React.useState([]);\r\n    const [selectedDoctor, setSelectedUser] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [visible, setVisibility] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n\r\n    const fetchDoctors = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setDoctors(response.data);\r\n        });\r\n    };\r\n    const fetchSearch = async () => {\r\n        await axios.get(`${BASE_URL}/search?query=${value}`).then((response) => {\r\n            setDoctors(response.data);\r\n        });\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const closePopup = () => {\r\n        setVisibility(false);\r\n    };\r\n    const closeDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const showDeletePopUpModal = (patient) => {\r\n        setShowDeleteModal(true);\r\n        setSelectedUser(patient);\r\n    };\r\n    const showSelectedDoctor = (doctor) => {\r\n        setVisibility(true);\r\n        setSelectedUser(doctor);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.value === '') {\r\n            setValue(event.target.value);\r\n            fetchDoctors();\r\n        } else {\r\n            setValue(event.target.value);\r\n            fetchSearch();\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchDoctors();\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            {showDeleteModal && <ConfirmDeleteModal patient={selectedDoctor} handleClose={closeDeleteModal} />}\r\n            {visible && <ShowSelectedDoctor doctor={selectedDoctor} handleClose={closePopup} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems={'center'}>\r\n                            <Grid item>\r\n                                <CardHeader title=\"Registered Doctors\" />\r\n                            </Grid>\r\n                            <Grid item style={{marginRight: '25px'}}>\r\n                                <OutlinedInput\r\n                                    className={classes.searchControl}\r\n                                    id=\"input-search-profile\"\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Search doctors\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    aria-describedby=\"search-helper-text\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'weight'\r\n                                    }}\r\n                                    labelWidth={0}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>#</TableCell>\r\n                                        <TableCell>Doctor name</TableCell>\r\n                                        <TableCell align=\"left\">ID/Iqama number</TableCell>\r\n                                        <TableCell align=\"left\">Copy of iqama number</TableCell>\r\n                                        <TableCell align=\"left\" style={{whiteSpace: 'nowrap'}}>\r\n                                            Date of birth\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">Mobile number</TableCell>\r\n                                        <TableCell align=\"left\">E-mail</TableCell>\r\n                                        <TableCell align=\"left\">Nationality</TableCell>\r\n                                        <TableCell align=\"left\">SCFHS Registration</TableCell>\r\n                                        <TableCell align=\"left\">Copy of scfhs registration card</TableCell>\r\n                                        <TableCell align=\"left\">Current Employer Name</TableCell>\r\n                                        <TableCell align=\"left\">Current Employer License Number</TableCell>\r\n                                        <TableCell align=\"left\">Current Employer City Location </TableCell>\r\n                                        <TableCell align=\"left\">Current Employer Website</TableCell>\r\n                                        <TableCell align=\"left\">CV/Resume</TableCell>\r\n                                        <TableCell align=\"left\">Personal photo</TableCell>\r\n                                        <TableCell align=\"left\">Verifed</TableCell>\r\n                                        <TableCell align=\"left\">Registered date</TableCell>\r\n                                        <TableCell align=\"left\">Last login</TableCell>\r\n                                        <TableCell align=\"left\"></TableCell>\r\n                                        <TableCell align=\"left\"></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {doctors &&\r\n                                        doctors\r\n                                            ?.filter((user) => user.is_doctor)\r\n                                            .map((doctor, index) => (\r\n                                                <TableRow key={doctor.id}>\r\n                                                    <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                                    <TableCell component=\"th\">{doctor.full_name}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.iqama_number}</TableCell>\r\n                                                    <TableCell align=\"left\">Image</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.date_of_birth}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.mobile_number}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.email}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.nationality}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.scfhs_registration}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.current_employer_name}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.current_employer_license_num}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.current_employer_city}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.current_employer_website}</TableCell>\r\n                                                    <TableCell align=\"left\">Image</TableCell>\r\n                                                    <TableCell align=\"left\">File</TableCell>\r\n                                                    <TableCell align=\"left\">Image</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.is_verified === false ? 'No' : 'Yes'}</TableCell>\r\n                                                    <TableCell align=\"left\">{formatDate(doctor.created_at)}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {doctor.last_login === null ? 'N/A' : formatDate(doctor.last_login)}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" onClick={() => showSelectedDoctor(doctor)}>\r\n                                                        <img src=\"images/eye.png\" id=\"delete-icon\" />\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" onClick={() => showDeletePopUpModal(doctor)}>\r\n                                                        <img src=\"images/trash-bin.png\" id=\"delete-icon\" />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst ShowSelectedDoctor = (props) => {\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [doctors, setDoctors] = React.useState([]);\r\n    const [userId, setUserId] = React.useState(null);\r\n\r\n    const fetchDoctors = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setDoctors(response.data);\r\n        });\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const handleSubmit = async (id) => {\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('is_verified', true);\r\n        axios({\r\n            method: 'put',\r\n            url: `${BASE_URL}/update-user/${id}/`,\r\n            data: bodyFormData,\r\n            headers: {'Content-Type': 'application/json'}\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload(false);\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n    };\r\n\r\n    const handleSubmitAdditionalFiles = (e) => {\r\n        e.preventDefault();\r\n        var bodyFormData = new FormData();\r\n        if (e.target.contract.files[0] === undefined) {\r\n            bodyFormData.append('contract', null);\r\n        } else {\r\n            bodyFormData.append('contract', e.target.contract.files[0]);\r\n        }\r\n        if (e.target.no_objection_letter.files[0] === undefined) {\r\n            bodyFormData.append('no_objection_letter', null);\r\n        } else {\r\n            bodyFormData.append('no_objection_letter', e.target.no_objection_letter.files[0]);\r\n        }\r\n        if (e.target.additional_attachment.files[0] === undefined) {\r\n            bodyFormData.append('additional_attachment', null);\r\n        } else {\r\n            bodyFormData.append('additional_attachment', e.target.additional_attachment.files[0]);\r\n        }\r\n        axios({\r\n            method: 'put',\r\n            url: `${BASE_URL}/update-user/${userId}/`,\r\n            data: bodyFormData,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload(false);\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n    };\r\n    const displayImg = (imgSrc) => {\r\n        document.getElementById('full-image').src = imgSrc;\r\n        var dImg = document.getElementById('image-viewer');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer');\r\n        hImg.style.display = 'none';\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDoctors();\r\n    }, []);\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <Card className=\"popup-container\">\r\n                    <CardHeader title=\"Consultation\" />\r\n                    <Divider />\r\n                    <CardContent className=\"popup-body\" id=\"popupCustom\" style={{top: '235px'}}>\r\n                        <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\r\n                            X\r\n                        </Button>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SubCard title={props.doctor.full_name}>\r\n                                    <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Doctor name: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.full_name}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                ID/Iqama number: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.iqama_number}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Copy of ID/Iqama number: &nbsp;\r\n                                                <span\r\n                                                    id=\"small-text\"\r\n                                                    onClick={() => displayImg(props.doctor.copy_of_iqama_number)}\r\n                                                    style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                >\r\n                                                    Image\r\n                                                </span>\r\n                                                <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                    <span className=\"closed\">&times;</span>\r\n                                                    <img className=\"modal-content\" id=\"full-image\" />\r\n                                                </div>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Date of birth: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.date_of_birth}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Mobile number: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.mobile_number}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                E-mail: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.email}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Nationality: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.nationality}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                SCFHS registration: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.scfhs_registration}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Copy of SCFHS registration : &nbsp;\r\n                                                <span\r\n                                                    id=\"small-text\"\r\n                                                    onClick={() => displayImg(props.doctor.copy_of_scfhs_registration_card)}\r\n                                                    style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                >\r\n                                                    Image\r\n                                                </span>\r\n                                                <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                    <span className=\"closed\">&times;</span>\r\n                                                    <img className=\"modal-content\" id=\"full-image\" />\r\n                                                </div>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer Name : &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.current_employer_name}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer License Number : &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.current_employer_license_num}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer City Location : &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.current_employer_city}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer Website : &nbsp;\r\n                                                <a href={props.doctor.current_employer_website} id=\"small-text\">\r\n                                                    {props.doctor.current_employer_website}\r\n                                                </a>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                CV/Resume: &nbsp;\r\n                                                <span id=\"small-text\">\r\n                                                    <a href={props.doctor.cv} target=\"_blank\">\r\n                                                        File\r\n                                                    </a>\r\n                                                    {/* {props.doctor.cv} */}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Personal Photo: &nbsp;\r\n                                                <span\r\n                                                    id=\"small-text\"\r\n                                                    onClick={() => displayImg(props.doctor.personal_photo)}\r\n                                                    style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                >\r\n                                                    Image\r\n                                                </span>\r\n                                                <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                    <span className=\"closed\">&times;</span>\r\n                                                    <img className=\"modal-content\" id=\"full-image\" />\r\n                                                </div>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Verifed: &nbsp;\r\n                                                <span id=\"small-text\">\r\n                                                    {props.doctor.is_verified === false ? (\r\n                                                        <>\r\n                                                            <span>No </span>\r\n                                                            <Button\r\n                                                                type=\"submit\"\r\n                                                                variant=\"contained\"\r\n                                                                color=\"success\"\r\n                                                                disableElevation\r\n                                                                onClick={() => handleSubmit(props.doctor.id)}\r\n                                                            >\r\n                                                                Verify!\r\n                                                            </Button>\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        'Yes'\r\n                                                    )}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Last login: &nbsp;\r\n                                                <span id=\"small-text\">\r\n                                                    {props.doctor.last_login === null ? 'N/A' : formatDate(props.doctor.last_login)}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <form onSubmit={handleSubmitAdditionalFiles}>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Contract: &nbsp;\r\n                                                    <input type=\"file\" name=\"contract\" onClick={() => setUserId(props.doctor.id)} />\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Non Objection Letter: &nbsp;\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        name=\"no_objection_letter\"\r\n                                                        onClick={() => setUserId(props.doctor.id)}\r\n                                                    />\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Additional Attachment: &nbsp;\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        name=\"additional_attachment\"\r\n                                                        onClick={() => setUserId(props.doctor.id)}\r\n                                                    />\r\n                                                </MuiTypography>\r\n                                                <Button type=\"submit\" variant=\"contained\" color=\"success\" disableElevation>\r\n                                                    Upload!\r\n                                                </Button>\r\n                                            </form>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n"],"sourceRoot":""}