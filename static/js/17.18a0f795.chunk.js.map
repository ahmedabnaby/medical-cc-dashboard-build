{"version":3,"sources":["views/pages/ShowSelectedConsultation.js","views/pages/ShowConsultations.js","views/pages/ShowSelectedPatient.js","views/pages/Patients.js"],"names":["ShowSelectedConsultation","props","useEffect","document","getElementById","style","display","_jsx","Container","id","children","Grid","container","spacing","gridSpacing","item","xs","_jsxs","Card","className","CardHeader","title","Divider","CardContent","top","overflowY","height","Button","onClick","handleCloseShowSelectedConsultation","sm","SubCard","consultation","chief_complaint","history_of_illness","review_of_systems","examination","assessment","medication","sick_leave","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","_slicedToArray","capitalizedMonth","toUpperCase","concat","formatDate","created_at","ShowConsultations","BASE_URL","_useState","useState","_useState2","consultations","setConsultations","_useState3","_useState4","patients","setPatients","_useState5","_useState6","selectedConsultation","setSelectedConsultation","_useState7","_useState8","newConsultations","setNewConsultations","_useState9","_useState10","visibleSelectedConsultation","setVisibleSelectedConsultation","_useState11","_useState12","setIsLoading","fetchConsultations","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","then","response","data","i","length","patient_id","patient","stop","apply","arguments","fetchDoctorsOrPatients","_ref2","_callee2","_context2","_Fragment","handleCloseConsultations","full_name","filter","_props$patient","map","filteredConsultation","index","ListGroup","as","doctor_id","filteredDoctor","Item","cursor","marginLeft","color","ShowSelectedPatient","_React$useState","React","_React$useState2","showConsultations","setShowConsultations","_React$useState3","_React$useState4","selectedPatient","setShowSelectedPatient","handleClose","direction","MuiTypography","variant","gutterBottom","iqama_number","imgSrc","copy_of_iqama_number","src","textDecoration","date_of_birth","mobile_number","email","nationality","last_login","disableElevation","type","useStyles","makeStyles","table","minWidth","searchControl","width","paddingRight","paddingLeft","marginBottom","marginTop","Patients","classes","setSelectedPatient","_React$useState5","_React$useState6","value","setValue","_React$useState7","_React$useState8","visible","setVisibility","fetchPatients","fetchSearch","Fragment","justifyContent","alignItems","marginRight","OutlinedInput","onChange","event","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","aria-describedby","inputProps","labelWidth","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","whiteSpace","TableBody","user","is_doctor","showSelectedPatient","component"],"mappings":"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","file":"static/js/17.18a0f795.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nexport const ShowSelectedConsultation = (props) => {\r\n    const hideShowModifyConsultation = () => {\r\n        props?.handleCloseShowSelectedConsultation();\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const displayImg = () => {\r\n        var dImg = document.getElementById('image-viewer2');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer2');\r\n        hImg.style.display = 'none';\r\n    };\r\n    useEffect(() => {\r\n        displayImg();\r\n    }, []);\r\n\r\n    return (\r\n        <Container id=\"image-viewer2\">\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card className=\"popup-container\">\r\n                        <CardHeader title=\"Consultation\" />\r\n                        <Divider />\r\n                        <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                            <Button id=\"closeBtn\" onClick={hideShowModifyConsultation}>\r\n                                X\r\n                            </Button>\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <SubCard title=\"Consultation\">\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Chief Complaint:</h5>\r\n                                            <strong>{props?.consultation.chief_complaint}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>History of Illness:</h5>\r\n                                            <strong>{props?.consultation.history_of_illness}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Review of systems:</h5>\r\n                                            <strong>{props?.consultation.review_of_systems}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Examinations:</h5>\r\n                                            <strong>{props?.consultation.examination}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Assessments/Plans:</h5>\r\n                                            <strong>{props?.consultation.assessment}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Medication:</h5>\r\n                                            <strong>{props?.consultation.medication}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Sick leave:</h5>\r\n                                            <strong>{props?.consultation.sick_leave}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4 mb-4\">\r\n                                            <h5>Created At:</h5>\r\n                                            <strong>{formatDate(props?.consultation.created_at)}</strong>\r\n                                        </div>\r\n                                    </SubCard>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container, ListGroup} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\nimport { ShowSelectedConsultation } from './ShowSelectedConsultation';\r\n\r\nexport const ShowConsultations = (props) => {\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [consultations, setConsultations] = useState([]);\r\n    const [patients, setPatients] = useState([]);\r\n    const [selectedConsultation, setSelectedConsultation] = useState(null);\r\n    const [newConsultations, setNewConsultations] = useState(false);\r\n    const [visibleSelectedConsultation, setVisibleSelectedConsultation] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const fetchConsultations = async () => {\r\n        setIsLoading(true);\r\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\r\n            setConsultations(response.data);\r\n            setIsLoading(false);\r\n            var i = 0;\r\n            while (i < response.data.length) {\r\n                if (response.data[i].patient_id === props?.patient.id) {\r\n                    setNewConsultations(true);\r\n                    break;\r\n                } else {\r\n                    setNewConsultations(false);\r\n                }\r\n                i++;\r\n            }\r\n        });\r\n    };\r\n    const fetchDoctorsOrPatients = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setPatients(response.data);\r\n        });\r\n    };\r\n    const showSelectedConsultation = (consultation) => {\r\n        setSelectedConsultation(consultation);\r\n        setVisibleSelectedConsultation(true);\r\n    };\r\n    const hideShowSelectedConsultations = () => {\r\n        setVisibleSelectedConsultation(false);\r\n    };\r\n    const displayImg = () => {\r\n        var dImg = document.getElementById('image-viewer');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer');\r\n        hImg.style.display = 'none';\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    useEffect(() => {\r\n        displayImg();\r\n        fetchConsultations();\r\n        fetchDoctorsOrPatients();\r\n    }, []);\r\n    return (\r\n        <>\r\n            {visibleSelectedConsultation && (\r\n                <ShowSelectedConsultation\r\n                    consultation={selectedConsultation}\r\n                    handleCloseShowSelectedConsultation={hideShowSelectedConsultations}\r\n                />\r\n            )}\r\n\r\n            <Container id=\"image-viewer\" onClick={hideImg}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleCloseConsultations}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props?.patient.full_name}>\r\n                                            {!newConsultations ? (\r\n                                                <h5 className=\"ml-4\">No consultations yet!</h5>\r\n                                            ) : (\r\n                                                <>\r\n                                                    {consultations &&\r\n                                                        consultations\r\n                                                            ?.filter((consultation) => consultation.patient_id === props?.patient?.id)\r\n                                                            .map((filteredConsultation, index) => (\r\n                                                                <ListGroup as=\"ol\" key={filteredConsultation.id}>\r\n                                                                    {patients\r\n                                                                        ?.filter((patient) => filteredConsultation.doctor_id === patient.id)\r\n                                                                        .map((filteredDoctor) => (\r\n                                                                            <ListGroup.Item\r\n                                                                                as=\"li\"\r\n                                                                                className=\"d-flex justify-content-between align-items-center\"\r\n                                                                                style={{cursor: 'pointer', marginLeft: '-25px'}}\r\n                                                                                key={filteredDoctor.id}\r\n                                                                                onClick={() =>\r\n                                                                                    showSelectedConsultation(filteredConsultation)\r\n                                                                                }\r\n                                                                            >\r\n                                                                                {index + 1}.\r\n                                                                                <div className=\"ms-2 me-auto\">\r\n                                                                                    <div className=\"fw-bold\">\r\n                                                                                        {filteredConsultation.chief_complaint}\r\n                                                                                    </div>\r\n                                                                                    <strong style={{color: 'gray'}}>\r\n                                                                                        Dr. ID: &nbsp;{filteredDoctor.id}\r\n                                                                                    </strong>\r\n                                                                                    <br />\r\n                                                                                    <strong>{filteredDoctor.full_name}</strong>\r\n                                                                                </div>\r\n                                                                                <strong>\r\n                                                                                    {formatDate(filteredConsultation.created_at)}\r\n                                                                                </strong>\r\n                                                                            </ListGroup.Item>\r\n                                                                        ))}\r\n                                                                </ListGroup>\r\n                                                            ))}\r\n                                                </>\r\n                                            )}\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {Container, Modal} from 'react-bootstrap';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport MuiTypography from '@material-ui/core/Typography';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\n\r\nimport {ShowConsultations} from './ShowConsultations';\r\n\r\nexport const ShowSelectedPatient = (props) => {\r\n    const [showConsultations, setShowConsultations] = React.useState(false);\r\n    const [selectedPatient, setShowSelectedPatient] = React.useState([]);\r\n\r\n    const showSelectedConsultations = (patient) => {\r\n        setShowConsultations(true);\r\n        setShowSelectedPatient(patient);\r\n    };\r\n\r\n    const closeConsultationsPopUp = () => {\r\n        setShowConsultations(false);\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const displayImg = (imgSrc) => {\r\n        document.getElementById('full-image').src = imgSrc;\r\n        var dImg = document.getElementById('image-viewer');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer');\r\n        hImg.style.display = 'none';\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showConsultations && <ShowConsultations patient={selectedPatient} handleCloseConsultations={closeConsultationsPopUp} />}\r\n            <Container>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" id=\"popupCustom\">\r\n                                <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props.patient.full_name}>\r\n                                            <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Patient name: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.full_name}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        ID/Iqama number: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.iqama_number}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Copy of ID/Iqama number: &nbsp;\r\n                                                        <span\r\n                                                            id=\"small-text\"\r\n                                                            onClick={() => displayImg(props.patient.copy_of_iqama_number)}\r\n                                                            style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                        >\r\n                                                            Image\r\n                                                        </span>\r\n                                                        <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                            <span className=\"closed\">&times;</span>\r\n                                                            <img className=\"modal-content\" id=\"full-image\" />\r\n                                                        </div>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Date of birth: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.date_of_birth}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Mobile number: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.mobile_number}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        E-mail: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.email}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Nationality: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.nationality}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Last login: &nbsp;\r\n                                                        <span id=\"small-text\">{formatDate(props.patient.last_login)}</span>\r\n                                                    </MuiTypography>\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        disableElevation\r\n                                                        type=\"submit\"\r\n                                                        onClick={() => showSelectedConsultations(props.patient)}\r\n                                                    >\r\n                                                        Show Consultations\r\n                                                    </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Card, CardHeader, Divider, CardContent, Grid, Button, OutlinedInput, InputAdornment } from '@material-ui/core';\r\n\r\nimport { gridSpacing } from '../../store/constant';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { IconSearch } from '@tabler/icons';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { ShowSelectedPatient } from './ShowSelectedPatient';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nexport default function Patients() {\r\n    const classes = useStyles();\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [patients, setPatients] = React.useState([]);\r\n    const [selectedPatient, setSelectedPatient] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [visible, setVisibility] = React.useState(false);\r\n\r\n\r\n    const fetchPatients = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setPatients(response.data)\r\n        })\r\n    }\r\n    const fetchSearch = async () => {\r\n        await axios.get(`${BASE_URL}/search?query=${value}`).then((response) => {\r\n            setPatients(response.data)\r\n        })\r\n    }\r\n    const formatDate = (date) => {\r\n        const options = { day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    }\r\n    const closePopup = () => {\r\n        setVisibility(false);\r\n    };\r\n    const showSelectedPatient = (patient) => {\r\n        setVisibility(true)\r\n        setSelectedPatient(patient)\r\n    }\r\n    const handleChange = (event) => {\r\n        if (event.target.value === \"\") {\r\n            setValue(event.target.value);\r\n            fetchPatients();\r\n        }\r\n        else {\r\n            setValue(event.target.value);\r\n            fetchSearch();\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        fetchPatients();\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            {visible && <ShowSelectedPatient patient={selectedPatient} handleClose={closePopup} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems={'center'}>\r\n                            <Grid item>\r\n                                <CardHeader title=\"Registered Patients\" />\r\n                            </Grid>\r\n                            <Grid item style={{ marginRight: '25px' }}>\r\n                                <OutlinedInput\r\n                                    className={classes.searchControl}\r\n                                    id=\"input-search-profile\"\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Search patients\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    aria-describedby=\"search-helper-text\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'weight'\r\n                                    }}\r\n                                    labelWidth={0}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell >#</TableCell>\r\n                                        <TableCell >Patient name</TableCell>\r\n                                        <TableCell align=\"left\">ID/Iqama number</TableCell>\r\n                                        <TableCell align=\"left\">Copy of iqama number</TableCell>\r\n                                        <TableCell align=\"left\" style={{ whiteSpace: 'nowrap' }}>Date of birth</TableCell>\r\n                                        <TableCell align=\"left\">Mobile number</TableCell>\r\n                                        <TableCell align=\"left\">E-mail</TableCell>\r\n                                        <TableCell align=\"left\">Nationality</TableCell>\r\n                                        <TableCell align=\"left\">Registered date</TableCell>\r\n                                        <TableCell align=\"left\">Last login</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {patients && patients?.filter(user => !user.is_doctor).map((patient, index) => (\r\n                                        <TableRow key={patient.id} onClick={() => showSelectedPatient(patient)}>\r\n                                            <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                            <TableCell component=\"th\">\r\n                                                {patient.full_name}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{patient.iqama_number}</TableCell>\r\n                                            {/* <TableCell align=\"left\">{patient.copy_of_iqama_number}</TableCell> */}\r\n                                            <TableCell align=\"left\">Image</TableCell>\r\n                                            <TableCell align=\"left\">{patient.date_of_birth}</TableCell>\r\n                                            <TableCell align=\"left\">{patient.mobile_number}</TableCell>\r\n                                            <TableCell align=\"left\">{patient.email}</TableCell>\r\n                                            <TableCell align=\"left\">{patient.nationality}</TableCell>\r\n                                            <TableCell align=\"left\">{formatDate(patient.created_at)}</TableCell>\r\n                                            <TableCell align=\"left\">{formatDate(patient.last_login)}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}