{"version":3,"sources":["views/pages/Doctors.js"],"names":["useStyles","makeStyles","table","minWidth","searchControl","width","paddingRight","paddingLeft","marginBottom","marginTop","createData","name","calories","fat","carbs","protein","Doctors","classes","BASE_URL","_React$useState","React","useState","_React$useState2","_slicedToArray","doctors","setDoctors","_React$useState3","_React$useState4","selectedDoctor","setSelectedUser","_React$useState5","_React$useState6","value","setValue","_React$useState7","_React$useState8","visible","setVisibility","fetchDoctors","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","concat","then","response","data","stop","apply","arguments","fetchSearch","_ref2","_callee2","_context2","formatDate","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","useEffect","_jsxs","Fragment","children","console","log","_jsx","ShowSelectedDoctor","doctor","handleClose","Grid","container","spacing","gridSpacing","item","xs","Card","direction","justifyContent","alignItems","CardHeader","title","style","marginRight","OutlinedInput","className","id","onChange","event","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","aria-describedby","inputProps","labelWidth","Divider","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","whiteSpace","TableBody","filter","user","is_doctor","map","index","onClick","showSelectedDoctor","component","full_name","iqama_number","date_of_birth","mobile_number","email","nationality","scfhs_registration","current_employer_name","current_employer_license_num","current_employer_city","current_employer_website","is_verified","created_at","last_login","props","_React$useState9","_React$useState10","_React$useState11","_React$useState12","userId","setUserId","_ref3","_callee3","_context3","handleSubmit","_ref4","_callee4","bodyFormData","_context4","FormData","append","method","url","headers","window","location","reload","catch","_x","displayImg","imgSrc","document","getElementById","src","display","hideImg","CardContent","top","Button","sm","SubCard","MuiTypography","variant","gutterBottom","copy_of_iqama_number","cursor","textDecoration","color","copy_of_scfhs_registration_card","href","cv","personal_photo","_Fragment","type","disableElevation","_formattedDate$split3","_formattedDate$split4","onSubmit","e","preventDefault","undefined","contract","files","no_objection_letter","additional_attachment"],"mappings":"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","file":"static/js/16.63a6bcc4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Card, CardHeader, Divider, CardContent, Grid, Button, OutlinedInput, InputAdornment } from '@material-ui/core';\r\n\r\nimport { gridSpacing } from '../../store/constant';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { IconSearch } from '@tabler/icons';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nimport MuiTypography from '@material-ui/core/Typography';\r\n\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9)\r\n];\r\n\r\nexport default function Doctors() {\r\n    const classes = useStyles();\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [doctors, setDoctors] = React.useState([]);\r\n    const [selectedDoctor, setSelectedUser] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [visible, setVisibility] = React.useState(false);\r\n\r\n\r\n    const fetchDoctors = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setDoctors(response.data)\r\n        })\r\n    }\r\n    const fetchSearch = async () => {\r\n        await axios.get(`${BASE_URL}/search?query=${value}`).then((response) => {\r\n            setDoctors(response.data)\r\n        })\r\n    }\r\n    const formatDate = (date) => {\r\n        const options = { day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    }\r\n    const closePopup = () => {\r\n        setVisibility(false);\r\n    };\r\n    const showSelectedDoctor = (doctor) => {\r\n        setVisibility(true)\r\n        setSelectedUser(doctor)\r\n    }\r\n    const handleChange = (event) => {\r\n        if (event.target.value === \"\") {\r\n            setValue(event.target.value);\r\n            fetchDoctors();\r\n        }\r\n        else {\r\n            setValue(event.target.value);\r\n            fetchSearch();\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        fetchDoctors();\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            {console.log(value)}\r\n            {visible && <ShowSelectedDoctor doctor={selectedDoctor} handleClose={closePopup} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems={'center'}>\r\n                            <Grid item>\r\n                                <CardHeader title=\"Registered Doctors\" />\r\n                            </Grid>\r\n                            <Grid item style={{ marginRight: '25px' }}>\r\n                                <OutlinedInput\r\n                                    className={classes.searchControl}\r\n                                    id=\"input-search-profile\"\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Search doctors\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    aria-describedby=\"search-helper-text\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'weight'\r\n                                    }}\r\n                                    labelWidth={0}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell >#</TableCell>\r\n                                        <TableCell >Doctor name</TableCell>\r\n                                        <TableCell align=\"left\">ID/Iqama number</TableCell>\r\n                                        <TableCell align=\"left\">Copy of iqama number</TableCell>\r\n                                        <TableCell align=\"left\" style={{ whiteSpace: 'nowrap' }}>Date of birth</TableCell>\r\n                                        <TableCell align=\"left\">Mobile number</TableCell>\r\n                                        <TableCell align=\"left\">E-mail</TableCell>\r\n                                        <TableCell align=\"left\">Nationality</TableCell>\r\n                                        <TableCell align=\"left\">SCFHS Registration</TableCell>\r\n                                        <TableCell align=\"left\">Copy of scfhs registration card</TableCell>\r\n                                        <TableCell align=\"left\">Current Employer Name</TableCell>\r\n                                        <TableCell align=\"left\">Current Employer License Number</TableCell>\r\n                                        <TableCell align=\"left\">Current Employer City Location </TableCell>\r\n                                        <TableCell align=\"left\">Current Employer Website</TableCell>\r\n                                        <TableCell align=\"left\">CV/Resume</TableCell>\r\n                                        <TableCell align=\"left\">Personal photo</TableCell>\r\n                                        <TableCell align=\"left\">Verifed</TableCell>\r\n                                        <TableCell align=\"left\">Registered date</TableCell>\r\n                                        <TableCell align=\"left\">Last login</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {doctors && doctors?.filter(user => user.is_doctor).map((doctor, index) => (\r\n                                        <TableRow key={doctor.id} onClick={() => showSelectedDoctor(doctor)}>\r\n                                            <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                            <TableCell component=\"th\">\r\n                                                {doctor.full_name}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{doctor.iqama_number}</TableCell>\r\n                                            <TableCell align=\"left\">Image</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.date_of_birth}</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.mobile_number}</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.email}</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.nationality}</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.scfhs_registration}</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.current_employer_name}</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.current_employer_license_num}</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.current_employer_city}</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.current_employer_website}</TableCell>\r\n                                            <TableCell align=\"left\">Image</TableCell>\r\n                                            <TableCell align=\"left\">File</TableCell>\r\n                                            <TableCell align=\"left\">Image</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.is_verified === false ? \"No\" : \"Yes\"}</TableCell>\r\n                                            <TableCell align=\"left\">{formatDate(doctor.created_at)}</TableCell>\r\n                                            <TableCell align=\"left\">{doctor.last_login === null ? \"N/A\" : formatDate(doctor.last_login)}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst ShowSelectedDoctor = (props) => {\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [doctors, setDoctors] = React.useState([]);\r\n    const [userId, setUserId] = React.useState(null);\r\n\r\n\r\n    const fetchDoctors = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setDoctors(response.data)\r\n        })\r\n    }\r\n    const formatDate = (date) => {\r\n        const options = { day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    }\r\n    const handleSubmit = async (id) => {\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append(\"is_verified\", true);\r\n        axios({\r\n            method: \"put\",\r\n            url: `${BASE_URL}/update-user/${id}/`,\r\n            data: bodyFormData,\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload(false);\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n    };\r\n\r\n\r\n    const handleSubmitAdditionalFiles = (e) => {\r\n        e.preventDefault();\r\n        var bodyFormData = new FormData();\r\n        if(e.target.contract.files[0] === undefined){\r\n            bodyFormData.append(\"contract\", null);\r\n        }\r\n        else{\r\n            bodyFormData.append(\"contract\", e.target.contract.files[0]);\r\n        }\r\n        if(e.target.no_objection_letter.files[0] === undefined){\r\n            bodyFormData.append(\"no_objection_letter\", null);\r\n        }\r\n        else{\r\n            bodyFormData.append(\"no_objection_letter\", e.target.no_objection_letter.files[0]);\r\n        }\r\n        if(e.target.additional_attachment.files[0] === undefined){\r\n            bodyFormData.append(\"additional_attachment\", null);\r\n        }\r\n        else{\r\n            bodyFormData.append(\"additional_attachment\", e.target.additional_attachment.files[0]);\r\n        }\r\n        axios({\r\n            method: \"put\",\r\n            url: `${BASE_URL}/update-user/${userId}/`,\r\n            data: bodyFormData,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload(false);\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n    }\r\n    const displayImg = (imgSrc) => {\r\n        document.getElementById('full-image').src = imgSrc;\r\n        var dImg = document.getElementById('image-viewer')\r\n        dImg.style.display = \"block\"\r\n    }\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer')\r\n        hImg.style.display = \"none\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDoctors();\r\n    }, []);\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <Card className='popup-container'>\r\n                    <CardHeader title=\"Consultation\" />\r\n                    <Divider />\r\n                    <CardContent className=\"popup-body\" id=\"popupCustom\" style={{top:'235px'}}>\r\n                        <Button id=\"closeBtn\" onClick={() => props.handleClose()}>X</Button>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SubCard title={props.doctor.full_name}>\r\n                                    <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Doctor name: &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.full_name}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                ID/Iqama number: &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.iqama_number}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Copy of ID/Iqama number: &nbsp;\r\n                                                <span id='small-text' onClick={() => displayImg(props.doctor.copy_of_iqama_number)} style={{ cursor: 'pointer', textDecoration: 'underline', color: 'blue' }}>\r\n                                                    Image\r\n                                                </span>\r\n                                                <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                    <span className=\"closed\">&times;</span>\r\n                                                    <img className=\"modal-content\" id=\"full-image\" />\r\n                                                </div>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Date of birth: &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.date_of_birth}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Mobile number: &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.mobile_number}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                E-mail: &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.email}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Nationality: &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.nationality}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                SCFHS registration: &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.scfhs_registration}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Copy of SCFHS registration : &nbsp;\r\n                                                <span id='small-text' onClick={() => displayImg(props.doctor.copy_of_scfhs_registration_card)} style={{ cursor: 'pointer', textDecoration: 'underline', color: 'blue' }}>\r\n                                                    Image\r\n                                                </span>\r\n                                                <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                    <span className=\"closed\">&times;</span>\r\n                                                    <img className=\"modal-content\" id=\"full-image\" />\r\n                                                </div>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer Name : &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.current_employer_name}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer License Number : &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.current_employer_license_num}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer City Location : &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.current_employer_city}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer Website : &nbsp;\r\n                                                <a href={props.doctor.current_employer_website} id='small-text'>\r\n                                                    {props.doctor.current_employer_website}\r\n                                                </a>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                CV/Resume: &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    <a href={props.doctor.cv} target='_blank'>File</a>\r\n                                                    {/* {props.doctor.cv} */}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Personal Photo: &nbsp;\r\n                                                <span id='small-text' onClick={() => displayImg(props.doctor.personal_photo)} style={{ cursor: 'pointer', textDecoration: 'underline', color: 'blue' }}>\r\n                                                    Image\r\n                                                </span>\r\n                                                <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                    <span className=\"closed\">&times;</span>\r\n                                                    <img className=\"modal-content\" id=\"full-image\" />\r\n                                                </div>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Verifed: &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.is_verified === false ?\r\n                                                        <>\r\n                                                            <span>No </span>\r\n                                                            <Button\r\n                                                                type='submit'\r\n                                                                variant=\"contained\"\r\n                                                                color=\"success\"\r\n                                                                disableElevation\r\n                                                                onClick={() => handleSubmit(props.doctor.id)}\r\n                                                            >\r\n                                                                Verify!\r\n                                                            </Button>\r\n                                                        </>\r\n                                                        :\r\n                                                        \"Yes\"}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Last login: &nbsp;\r\n                                                <span id='small-text'>\r\n                                                    {props.doctor.last_login === null ? \"N/A\" : formatDate(props.doctor.last_login)}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <form onSubmit={handleSubmitAdditionalFiles}>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Contract: &nbsp;\r\n                                                    <input type='file' name='contract' onClick={() => setUserId(props.doctor.id)} />\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Non Objection Letter: &nbsp;\r\n                                                    <input type='file' name='no_objection_letter' onClick={() => setUserId(props.doctor.id)}/>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Additional Attachment: &nbsp;\r\n                                                    <input type='file' name='additional_attachment' onClick={() => setUserId(props.doctor.id)}/>\r\n                                                </MuiTypography>\r\n                                                <Button\r\n                                                    type='submit'\r\n                                                    variant=\"contained\"\r\n                                                    color=\"success\"\r\n                                                    disableElevation\r\n                                                >\r\n                                                    Upload!\r\n                                                </Button>\r\n                                            </form>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\n\r\n"],"sourceRoot":""}