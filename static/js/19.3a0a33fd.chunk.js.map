{"version":3,"sources":["views/pages/ShowConsultationCallID.js","views/pages/ShowSelectedPayment.js","views/pages/Payments.js"],"names":["ShowConsultationCallID","props","_useState","useState","_useState2","_slicedToArray","consultations","setConsultations","fetchConsultations","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","concat","then","response","data","stop","apply","arguments","formatDate","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","useEffect","_jsx","_Fragment","children","Modal","show","showModal","onHide","handleCloseConsultation","Grid","container","spacing","gridSpacing","item","xs","_jsxs","Card","className","CardHeader","title","Divider","CardContent","style","top","overflowY","height","Button","id","onClick","sm","filter","consultation","map","filteredConsultation","index","SubCard","chief_complaint","history_of_illness","review_of_systems","examination","assessment","medication","sick_leave","created_at","ShowSelectedPayment","_props$payment","_React$useState","React","_React$useState2","showConsultation","setShowConsultation","selectedConsultation","setSelectedConsultation","_useState3","_useState4","closeConsultationPopup","Container","handleClose","payment","order_id","direction","MuiTypography","variant","gutterBottom","creation_time","message","status","total_authorized_amount","total_captured_amount","payment_info","payment_mechanism","brand","scheme","expiry_month","expiry_year","payment_status","call_id","color","disableElevation","type","useStyles","makeStyles","table","minWidth","searchControl","width","paddingRight","paddingLeft","marginBottom","marginTop","Payments","classes","BASE_URL","payments","setPayments","_React$useState3","_React$useState4","value","setValue","currentPage","setCurrentPage","_React$useState5","_React$useState6","selectedPayment","setSelectedPayment","selectedStatus","setSelectedStatus","_React$useState7","_React$useState8","visible","setVisibility","fetchPayments","fetchSearch","_ref2","_callee2","_context2","startIndex","endIndex","displayedPayments","slice","isLastPage","length","Fragment","justifyContent","alignItems","onChange","e","target","marginRight","OutlinedInput","event","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","aria-describedby","inputProps","labelWidth","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","showSelectedPayment","component","prevPage","Math","max"],"mappings":"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","file":"static/js/19.3a0a33fd.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container, ListGroup, Modal} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\n\r\nexport const ShowConsultationCallID = (props) => {\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [consultations, setConsultations] = useState([]);\r\n\r\n    const fetchConsultations = async () => {\r\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\r\n            setConsultations(response.data);\r\n        });\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    useEffect(() => {\r\n        fetchConsultations();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Modal show={props.showModal} onHide={props.handleCloseConsultation}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleCloseConsultation}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <>\r\n                                            {consultations &&\r\n                                                consultations\r\n                                                    ?.filter((consultation) => consultation.id === props?.consultation)\r\n                                                    .map((filteredConsultation, index) => (\r\n                                                        <SubCard title=\"Consultation\">\r\n                                                            <div className=\"mt-4\">\r\n                                                                <h5>Chief Complaint:</h5>\r\n                                                                <strong>{filteredConsultation.chief_complaint}</strong>\r\n                                                            </div>\r\n                                                            <div className=\"mt-4\">\r\n                                                                <h5>History of Illness:</h5>\r\n                                                                <strong>{filteredConsultation.history_of_illness}</strong>\r\n                                                            </div>\r\n                                                            <div className=\"mt-4\">\r\n                                                                <h5>Review of systems:</h5>\r\n                                                                <strong>{filteredConsultation.review_of_systems}</strong>\r\n                                                            </div>\r\n                                                            <div className=\"mt-4\">\r\n                                                                <h5>Examinations:</h5>\r\n                                                                <strong>{filteredConsultation.examination}</strong>\r\n                                                            </div>\r\n                                                            <div className=\"mt-4\">\r\n                                                                <h5>Assessments/Plans:</h5>\r\n                                                                <strong>{filteredConsultation.assessment}</strong>\r\n                                                            </div>\r\n                                                            <div className=\"mt-4\">\r\n                                                                <h5>Medication:</h5>\r\n                                                                <strong>{filteredConsultation.medication}</strong>\r\n                                                            </div>\r\n                                                            <div className=\"mt-4\">\r\n                                                                <h5>Sick leave:</h5>\r\n                                                                <strong>{filteredConsultation.sick_leave}</strong>\r\n                                                            </div>\r\n                                                            <div className=\"mt-4 mb-4\">\r\n                                                                <h5>Created At:</h5>\r\n                                                                <strong>{formatDate(filteredConsultation.created_at)}</strong>\r\n                                                            </div>\r\n                                                        </SubCard>\r\n                                                    ))}\r\n                                        </>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Container, Modal} from 'react-bootstrap';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport MuiTypography from '@material-ui/core/Typography';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport {ShowConsultationCallID} from './ShowConsultationCallID';\r\n\r\nexport const ShowSelectedPayment = (props) => {\r\n    const [showConsultation, setShowConsultation] = React.useState(false);\r\n    const [selectedConsultation, setSelectedConsultation] = useState([]);\r\n    const [showModal, setShowModal] = useState(true);\r\n\r\n    const handleCloseConsultation = () => {\r\n        setShowModal(false);\r\n        // Other logic as needed\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const closeConsultationPopup = () => {\r\n        setShowConsultation(false);\r\n    };\r\n\r\n    const showSelectedConsultation = (call_id) => {\r\n        closeConsultationPopup(); // Close the previous modal before showing the new one\r\n        setSelectedConsultation(call_id);\r\n        setShowConsultation(true);\r\n    };\r\n\r\n    const closeConsultationPopUp = () => {\r\n        setShowConsultation(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                {showConsultation && (\r\n                    <ShowConsultationCallID\r\n                        consultation={selectedConsultation}\r\n                        showModal={showModal}\r\n                        handleCloseConsultation={closeConsultationPopup}\r\n                    />\r\n                )}\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Payment Info\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" id=\"popupCustom\">\r\n                                <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props.payment.order_id}>\r\n                                            <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Order ID: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.order_id}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Creation Time: &nbsp;\r\n                                                        <span id=\"small-text\">{formatDate(props.payment.creation_time)}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Message: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.message}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Status: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.status}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Total Authorized Amount: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.total_authorized_amount}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Total Cuthorized Amount: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.total_captured_amount}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Payment Info: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.payment_info}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Payment Mechanism: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.payment_mechanism}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Brand: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.brand}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Scheme: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.scheme}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Expiry Month: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.expiry_month}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Expiry Month: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.expiry_year}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Consultation Status: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.payment_status}</span>\r\n                                                    </MuiTypography>\r\n                                                    {props?.payment?.call_id && (\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={() => showSelectedConsultation(props?.payment.call_id)}\r\n                                                            disableElevation\r\n                                                            type=\"submit\"\r\n                                                        >\r\n                                                            Show Consultation\r\n                                                        </Button>\r\n                                                    )}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Card, CardHeader, Divider, Grid, OutlinedInput, InputAdornment} from '@material-ui/core';\r\n\r\nimport {gridSpacing} from '../../store/constant';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport {IconSearch} from '@tabler/icons';\r\n\r\nimport axios from 'axios';\r\nimport {ShowSelectedPayment} from './ShowSelectedPayment';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nexport default function Payments() {\r\n    const classes = useStyles();\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [payments, setPayments] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selectedPayment, setSelectedPayment] = React.useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState('');\r\n\r\n    const itemsPerPage = 10;\r\n    const [visible, setVisibility] = React.useState(false);\r\n\r\n    const fetchPayments = async () => {\r\n        await axios.get(`${BASE_URL}/payments`).then((response) => {\r\n            setPayments(response.data);\r\n        });\r\n    };\r\n    const fetchSearch = async () => {\r\n        await axios.get(`${BASE_URL}/payment-search?query=${value}`).then((response) => {\r\n            setPayments(response.data);\r\n            setCurrentPage(1);\r\n        });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.value === '') {\r\n            setValue(event.target.value);\r\n            fetchPayments();\r\n        } else {\r\n            setValue(event.target.value);\r\n            fetchSearch();\r\n        }\r\n    };\r\n    const showSelectedPayment = (payment) => {\r\n        setVisibility(true);\r\n        setSelectedPayment(payment);\r\n    };\r\n    const closePopup = () => {\r\n        setVisibility(false);\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPayments();\r\n    }, []);\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    const displayedPayments = payments\r\n        .filter((payment) => !selectedStatus || payment.status === selectedStatus)\r\n        .slice(startIndex, endIndex);\r\n    const isLastPage = currentPage * itemsPerPage >= payments.length;\r\n\r\n    const handleShowPrevious = () => {\r\n        setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n        setCurrentPage((prevPage) => prevPage + 1);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {visible && <ShowSelectedPayment payment={selectedPayment} handleClose={closePopup} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems={'center'}>\r\n                            <Grid item>\r\n                                <CardHeader title=\"All Payments\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <select\r\n                                    value={selectedStatus}\r\n                                    className={classes.searchControl}\r\n                                    onChange={(e) => setSelectedStatus(e.target.value)}\r\n                                    style={{height: '40px'}}\r\n                                >\r\n                                    <option value=\"\">All Status</option>\r\n                                    <option value=\"CAPTURED\">Success</option>\r\n                                    <option value=\"FAILED\">Failed</option>\r\n                                </select>\r\n                            </Grid>\r\n                            <Grid item style={{marginRight: '25px'}}>\r\n                                <OutlinedInput\r\n                                    className={classes.searchControl}\r\n                                    id=\"input-search-profile\"\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Order ID\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    aria-describedby=\"search-helper-text\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'weight'\r\n                                    }}\r\n                                    labelWidth={0}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>#</TableCell>\r\n                                        <TableCell>Order ID</TableCell>\r\n                                        <TableCell align=\"left\">Creation Time</TableCell>\r\n                                        <TableCell align=\"left\">Message</TableCell>\r\n                                        <TableCell align=\"left\">Status</TableCell>\r\n                                        <TableCell align=\"left\">Total Authorized Amount</TableCell>\r\n                                        <TableCell align=\"left\">Total Captured Amount</TableCell>\r\n                                        <TableCell align=\"left\">Payment Info</TableCell>\r\n                                        <TableCell align=\"left\">Payment Status</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {displayedPayments.map((payment, index) => (\r\n                                        <TableRow key={payment.id} onClick={() => showSelectedPayment(payment)}>\r\n                                            <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                            <TableCell component=\"th\">{payment.order_id}</TableCell>\r\n                                            <TableCell align=\"left\">{formatDate(payment.creation_time)}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.message}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.status}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.total_authorized_amount}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.total_captured_amount}</TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <div>\r\n                                                    {payment.payment_mechanism}\r\n                                                    {': '} {payment.payment_info} {payment.expiry_month}\r\n                                                    {'/'}\r\n                                                    {payment.expiry_year}\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{payment.payment_status ? payment.payment_status : 'none'}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <Grid container justifyContent=\"center\">\r\n                            {' '}\r\n                            {currentPage > 1 && (\r\n                                <Button onClick={handleShowPrevious} variant=\"outlined\">\r\n                                    Show Previous Page\r\n                                </Button>\r\n                            )}\r\n                            {!isLastPage && (\r\n                                <Button onClick={handleShowMore} variant=\"outlined\">\r\n                                    Show More\r\n                                </Button>\r\n                            )}\r\n                        </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n"],"sourceRoot":""}