{"version":3,"sources":["views/pages/ConfirmDeleteModal.js","views/pages/ShowSelectedConsultation.js","views/pages/ShowConsultations.js","views/pages/ShowSelectedPatient.js","views/pages/Patients.js"],"names":["ConfirmDeleteModal","props","_useState","useState","_useState2","_slicedToArray","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","method","url","concat","patient","id","then","response","window","location","reload","catch","alert","stop","apply","arguments","_jsx","_Fragment","children","Container","Grid","container","spacing","gridSpacing","item","xs","_jsxs","Card","className","CardHeader","title","Divider","CardContent","style","top","overflowY","height","Button","onClick","handleClose","sm","SubCard","full_name","is_doctor","color","ShowSelectedConsultation","useEffect","document","getElementById","display","handleCloseShowSelectedConsultation","consultation","chief_complaint","history_of_illness","review_of_systems","examination","assessment","medication","sick_leave","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","formatDate","created_at","ShowConsultations","BASE_URL","consultations","setConsultations","_useState3","_useState4","patients","setPatients","_useState5","_useState6","selectedConsultation","setSelectedConsultation","_useState7","_useState8","newConsultations","setNewConsultations","_useState9","_useState10","visibleSelectedConsultation","setVisibleSelectedConsultation","_useState11","_useState12","setIsLoading","fetchConsultations","get","data","i","length","patient_id","fetchDoctorsOrPatients","_ref2","_callee2","_context2","handleCloseConsultations","filter","_props$patient","map","filteredConsultation","index","ListGroup","as","doctor_id","filteredDoctor","Item","cursor","marginLeft","ShowSelectedPatient","_React$useState","React","_React$useState2","showConsultations","setShowConsultations","_React$useState3","_React$useState4","selectedPatient","setShowSelectedPatient","_React$useState5","_React$useState6","isImage","setIsImage","contentType","fetch","copy_of_iqama_number","sent","headers","startsWith","t0","console","error","checkFileType","direction","MuiTypography","variant","gutterBottom","iqama_number","src","textDecoration","href","target","rel","alt","date_of_birth","mobile_number","email","nationality","last_login","disableElevation","type","useStyles","makeStyles","table","minWidth","searchControl","width","paddingRight","paddingLeft","marginBottom","marginTop","Patients","classes","setSelectedPatient","value","setValue","_React$useState7","_React$useState8","visible","setVisibility","_React$useState9","_React$useState10","showDeleteModal","setShowDeleteModal","_React$useState11","_React$useState12","fileTypes","setFileTypes","fetchPatients","fetchSearch","_ref3","_callee3","_context3","prevFileTypes","_objectSpread","_defineProperty","_x","user","forEach","Fragment","justifyContent","alignItems","marginRight","OutlinedInput","onChange","event","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","aria-describedby","inputProps","labelWidth","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","whiteSpace","TableBody","component","showSelectedPatient","showDeletePopUpModal"],"mappings":"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","file":"static/js/16.7696981a.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container, ListGroup} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\n\r\nexport const ConfirmDeleteModal = (props) => {\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleDelete = async () => {\r\n        await axios({\r\n            method: 'DELETE',\r\n            url: `${BASE_URL}/user/${props?.patient.id}/delete`\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload();\r\n            })\r\n            .catch(function (response) {\r\n                alert('An error occured!');\r\n            });\r\n    };\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleClose}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props?.patient.full_name}>\r\n                                            <h2>Are you sure you want to delete this {props?.is_doctor ? 'doctor?' : 'patient?'}</h2>\r\n                                            <Button style={{color: 'red'}} onClick={handleDelete}>\r\n                                                Yes\r\n                                            </Button>\r\n                                            <Button style={{color: 'green'}} onClick={props?.handleClose}>\r\n                                                No\r\n                                            </Button>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nexport const ShowSelectedConsultation = (props) => {\r\n    const hideShowModifyConsultation = () => {\r\n        props?.handleCloseShowSelectedConsultation();\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const displayImg = () => {\r\n        var dImg = document.getElementById('image-viewer2');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer2');\r\n        hImg.style.display = 'none';\r\n    };\r\n    useEffect(() => {\r\n        displayImg();\r\n    }, []);\r\n\r\n    return (\r\n        <Container id=\"image-viewer2\">\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card className=\"popup-container\">\r\n                        <CardHeader title=\"Consultation\" />\r\n                        <Divider />\r\n                        <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                            <Button id=\"closeBtn\" onClick={hideShowModifyConsultation}>\r\n                                X\r\n                            </Button>\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <SubCard title=\"Consultation\">\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Chief Complaint:</h5>\r\n                                            <strong>{props?.consultation.chief_complaint}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>History of Illness:</h5>\r\n                                            <strong>{props?.consultation.history_of_illness}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Review of systems:</h5>\r\n                                            <strong>{props?.consultation.review_of_systems}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Examinations:</h5>\r\n                                            <strong>{props?.consultation.examination}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Assessments/Plans:</h5>\r\n                                            <strong>{props?.consultation.assessment}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Medication:</h5>\r\n                                            <strong>{props?.consultation.medication}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Sick leave:</h5>\r\n                                            <strong>{props?.consultation.sick_leave}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4 mb-4\">\r\n                                            <h5>Created At:</h5>\r\n                                            <strong>{formatDate(props?.consultation.created_at)}</strong>\r\n                                        </div>\r\n                                    </SubCard>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container, ListGroup} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\nimport { ShowSelectedConsultation } from './ShowSelectedConsultation';\r\n\r\nexport const ShowConsultations = (props) => {\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [consultations, setConsultations] = useState([]);\r\n    const [patients, setPatients] = useState([]);\r\n    const [selectedConsultation, setSelectedConsultation] = useState(null);\r\n    const [newConsultations, setNewConsultations] = useState(false);\r\n    const [visibleSelectedConsultation, setVisibleSelectedConsultation] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const fetchConsultations = async () => {\r\n        setIsLoading(true);\r\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\r\n            setConsultations(response.data);\r\n            setIsLoading(false);\r\n            var i = 0;\r\n            while (i < response.data.length) {\r\n                if (response.data[i].patient_id === props?.patient.id) {\r\n                    setNewConsultations(true);\r\n                    break;\r\n                } else {\r\n                    setNewConsultations(false);\r\n                }\r\n                i++;\r\n            }\r\n        });\r\n    };\r\n    const fetchDoctorsOrPatients = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setPatients(response.data);\r\n        });\r\n    };\r\n    const showSelectedConsultation = (consultation) => {\r\n        setSelectedConsultation(consultation);\r\n        setVisibleSelectedConsultation(true);\r\n    };\r\n    const hideShowSelectedConsultations = () => {\r\n        setVisibleSelectedConsultation(false);\r\n    };\r\n    const displayImg = () => {\r\n        var dImg = document.getElementById('image-viewer');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer');\r\n        hImg.style.display = 'none';\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    useEffect(() => {\r\n        displayImg();\r\n        fetchConsultations();\r\n        fetchDoctorsOrPatients();\r\n    }, []);\r\n    return (\r\n        <>\r\n            {visibleSelectedConsultation && (\r\n                <ShowSelectedConsultation\r\n                    consultation={selectedConsultation}\r\n                    handleCloseShowSelectedConsultation={hideShowSelectedConsultations}\r\n                />\r\n            )}\r\n\r\n            <Container id=\"image-viewer\" onClick={hideImg}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleCloseConsultations}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props?.patient.full_name}>\r\n                                            {!newConsultations ? (\r\n                                                <h5 className=\"ml-4\">No consultations yet!</h5>\r\n                                            ) : (\r\n                                                <>\r\n                                                    {consultations &&\r\n                                                        consultations\r\n                                                            ?.filter((consultation) => consultation.patient_id === props?.patient?.id)\r\n                                                            .map((filteredConsultation, index) => (\r\n                                                                <ListGroup as=\"ol\" key={filteredConsultation.id}>\r\n                                                                    {patients\r\n                                                                        ?.filter((patient) => filteredConsultation.doctor_id === patient.id)\r\n                                                                        .map((filteredDoctor) => (\r\n                                                                            <ListGroup.Item\r\n                                                                                as=\"li\"\r\n                                                                                className=\"d-flex justify-content-between align-items-center\"\r\n                                                                                style={{cursor: 'pointer', marginLeft: '-25px'}}\r\n                                                                                key={filteredDoctor.id}\r\n                                                                                onClick={() =>\r\n                                                                                    showSelectedConsultation(filteredConsultation)\r\n                                                                                }\r\n                                                                            >\r\n                                                                                {index + 1}.\r\n                                                                                <div className=\"ms-2 me-auto\">\r\n                                                                                    <div className=\"fw-bold\">\r\n                                                                                        {filteredConsultation.chief_complaint}\r\n                                                                                    </div>\r\n                                                                                    <strong style={{color: 'gray'}}>\r\n                                                                                        Dr. ID: &nbsp;{filteredDoctor.id}\r\n                                                                                    </strong>\r\n                                                                                    <br />\r\n                                                                                    <strong>{filteredDoctor.full_name}</strong>\r\n                                                                                </div>\r\n                                                                                <strong>\r\n                                                                                    {formatDate(filteredConsultation.created_at)}\r\n                                                                                </strong>\r\n                                                                            </ListGroup.Item>\r\n                                                                        ))}\r\n                                                                </ListGroup>\r\n                                                            ))}\r\n                                                </>\r\n                                            )}\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {Container, Modal} from 'react-bootstrap';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport MuiTypography from '@material-ui/core/Typography';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\n\r\nimport {ShowConsultations} from './ShowConsultations';\r\n\r\nexport const ShowSelectedPatient = (props) => {\r\n    const [showConsultations, setShowConsultations] = React.useState(false);\r\n    const [selectedPatient, setShowSelectedPatient] = React.useState([]);\r\n    const [isImage, setIsImage] = React.useState(false);\r\n\r\n    const showSelectedConsultations = (patient) => {\r\n        setShowConsultations(true);\r\n        setShowSelectedPatient(patient);\r\n    };\r\n\r\n    const closeConsultationsPopUp = () => {\r\n        setShowConsultations(false);\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    useEffect(() => {\r\n        const checkFileType = async () => {\r\n            try {\r\n                const response = await fetch(props.patient.copy_of_iqama_number);\r\n                const contentType = response.headers.get('content-type');\r\n                // Check if the content type indicates an image\r\n                setIsImage(contentType.startsWith('image'));\r\n            } catch (error) {\r\n                console.error('Error checking file type:', error);\r\n            }\r\n        };\r\n\r\n        // Call the file type checking function when the component mounts\r\n        checkFileType();\r\n    }, [props.patient.copy_of_iqama_number]); // Add the dependency to re-run the effect when the URL changes\r\n\r\n    const displayImg = () => {\r\n        // Check the file type before displaying the image viewer\r\n        document.getElementById('full-image').src = props.patient.copy_of_iqama_number;\r\n        var dImg = document.getElementById('image-viewer');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer');\r\n        hImg.style.display = 'none';\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showConsultations && <ShowConsultations patient={selectedPatient} handleCloseConsultations={closeConsultationsPopUp} />}\r\n            <Container>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" id=\"popupCustom\">\r\n                                <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props.patient.full_name}>\r\n                                            <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Patient name: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.full_name}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        ID/Iqama number: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.iqama_number}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Copy of ID/Iqama number: &nbsp;\r\n                                                        {isImage ? (\r\n                                                            <span\r\n                                                                id=\"small-text\"\r\n                                                                onClick={displayImg}\r\n                                                                style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                            >\r\n                                                                Image\r\n                                                            </span>\r\n                                                        ) : (\r\n                                                            <a\r\n                                                                href={props.patient.copy_of_iqama_number}\r\n                                                                target=\"_blank\"\r\n                                                                rel=\"noopener noreferrer\"\r\n                                                            >\r\n                                                                File\r\n                                                            </a>\r\n                                                        )}\r\n                                                        {isImage && (\r\n                                                            <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                                <span className=\"closed\">&times;</span>\r\n                                                                <img className=\"modal-content\" id=\"full-image\" alt=\"Image\" />\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Date of birth: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.date_of_birth}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Mobile number: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.mobile_number}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        E-mail: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.email}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Nationality: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.nationality}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Last login: &nbsp;\r\n                                                        <span id=\"small-text\">{formatDate(props.patient.last_login)}</span>\r\n                                                    </MuiTypography>\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        disableElevation\r\n                                                        type=\"submit\"\r\n                                                        onClick={() => showSelectedConsultations(props.patient)}\r\n                                                    >\r\n                                                        Show Consultations\r\n                                                    </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {useEffect} from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button, OutlinedInput, InputAdornment} from '@material-ui/core';\r\n\r\nimport {gridSpacing} from '../../store/constant';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {IconSearch} from '@tabler/icons';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {ShowSelectedPatient} from './ShowSelectedPatient';\r\nimport {ConfirmDeleteModal} from './ConfirmDeleteModal';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nexport default function Patients() {\r\n    const classes = useStyles();\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [patients, setPatients] = React.useState([]);\r\n    const [selectedPatient, setSelectedPatient] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [visible, setVisibility] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [fileTypes, setFileTypes] = React.useState({});\r\n\r\n    const fetchPatients = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setPatients(response.data);\r\n        });\r\n    };\r\n    const fetchSearch = async () => {\r\n        await axios.get(`${BASE_URL}/search?query=${value}`).then((response) => {\r\n            setPatients(response.data);\r\n        });\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const closeDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const showDeletePopUpModal = (patient) => {\r\n        setShowDeleteModal(true);\r\n        setSelectedPatient(patient);\r\n    };\r\n    const closePopup = () => {\r\n        setVisibility(false);\r\n    };\r\n    const showSelectedPatient = (patient) => {\r\n        setVisibility(true);\r\n        setSelectedPatient(patient);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.value === '') {\r\n            setValue(event.target.value);\r\n            fetchPatients();\r\n        } else {\r\n            setValue(event.target.value);\r\n            fetchSearch();\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        const checkFileType = async (patient) => {\r\n            try {\r\n                const response = await fetch(patient.copy_of_iqama_number);\r\n                const contentType = response.headers.get('content-type');\r\n\r\n                // Update the fileTypes state with the patient ID and its content type\r\n                setFileTypes((prevFileTypes) => ({\r\n                    ...prevFileTypes,\r\n                    [patient.id]: contentType\r\n                }));\r\n            } catch (error) {\r\n                console.error(`Error checking file type for patient ${patient.id}:`, error);\r\n            }\r\n        };\r\n\r\n        // Iterate through patients and check file type for each\r\n        patients\r\n            ?.filter((user) => !user.is_doctor)\r\n            .forEach((patient) => {\r\n                if (!fileTypes[patient.id]) {\r\n                    checkFileType(patient);\r\n                }\r\n            });\r\n    }, [patients]);\r\n\r\n    useEffect(() => {\r\n        fetchPatients();\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            {visible && <ShowSelectedPatient patient={selectedPatient} handleClose={closePopup} />}\r\n            {showDeleteModal && <ConfirmDeleteModal patient={selectedPatient} handleClose={closeDeleteModal} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems={'center'}>\r\n                            <Grid item>\r\n                                <CardHeader title=\"Registered Patients\" />\r\n                            </Grid>\r\n                            <Grid item style={{marginRight: '25px'}}>\r\n                                <OutlinedInput\r\n                                    className={classes.searchControl}\r\n                                    id=\"input-search-profile\"\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Search patients\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    aria-describedby=\"search-helper-text\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'weight'\r\n                                    }}\r\n                                    labelWidth={0}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>#</TableCell>\r\n                                        <TableCell>Patient name</TableCell>\r\n                                        <TableCell align=\"left\">ID/Iqama number</TableCell>\r\n                                        <TableCell align=\"left\">Copy of iqama number</TableCell>\r\n                                        <TableCell align=\"left\" style={{whiteSpace: 'nowrap'}}>\r\n                                            Date of birth\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">Mobile number</TableCell>\r\n                                        <TableCell align=\"left\">E-mail</TableCell>\r\n                                        <TableCell align=\"left\">Nationality</TableCell>\r\n                                        <TableCell align=\"left\">Registered date</TableCell>\r\n                                        <TableCell align=\"left\">Last login</TableCell>\r\n                                        <TableCell align=\"left\"></TableCell>\r\n                                        <TableCell align=\"left\"></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {patients &&\r\n                                        patients\r\n                                            ?.filter((user) => !user.is_doctor)\r\n                                            .map((patient, index) => (\r\n                                                <TableRow key={patient.id}>\r\n                                                    <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                                    <TableCell component=\"th\">{patient.full_name}</TableCell>\r\n                                                    <TableCell align=\"left\">{patient.iqama_number}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {/* Check if file type is available for the patient */}\r\n                                                        {fileTypes[patient.id] &&\r\n                                                            (fileTypes[patient.id].startsWith('image') ? (\r\n                                                                <a\r\n                                                                    href={patient.copy_of_iqama_number}\r\n                                                                    target=\"_blank\"\r\n                                                                    rel=\"noopener noreferrer\"\r\n                                                                >\r\n                                                                    Image\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <a\r\n                                                                    href={patient.copy_of_iqama_number}\r\n                                                                    target=\"_blank\"\r\n                                                                    rel=\"noopener noreferrer\"\r\n                                                                >\r\n                                                                    File\r\n                                                                </a>\r\n                                                            ))}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">{patient.date_of_birth}</TableCell>\r\n                                                    <TableCell align=\"left\">{patient.mobile_number}</TableCell>\r\n                                                    <TableCell align=\"left\">{patient.email}</TableCell>\r\n                                                    <TableCell align=\"left\">{patient.nationality}</TableCell>\r\n                                                    <TableCell align=\"left\">{formatDate(patient.created_at)}</TableCell>\r\n                                                    <TableCell align=\"left\">{formatDate(patient.last_login)}</TableCell>\r\n                                                    <TableCell align=\"left\" onClick={() => showSelectedPatient(patient)}>\r\n                                                        <img src=\"images/eye.png\" id=\"delete-icon\" />\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" onClick={() => showDeletePopUpModal(patient)}>\r\n                                                        <img src=\"images/trash-bin.png\" id=\"delete-icon\" />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n"],"sourceRoot":""}