{"version":3,"sources":["views/pages/ConfirmDeleteModal.js","views/pages/Doctors.js"],"names":["ConfirmDeleteModal","props","_useState","useState","_useState2","_slicedToArray","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","method","url","concat","patient","id","then","response","window","location","reload","catch","alert","stop","apply","arguments","_jsx","_Fragment","children","Container","Grid","container","spacing","gridSpacing","item","xs","_jsxs","Card","className","CardHeader","title","Divider","CardContent","style","top","overflowY","height","Button","onClick","handleClose","sm","SubCard","full_name","is_doctor","color","useStyles","makeStyles","table","minWidth","searchControl","width","paddingRight","paddingLeft","marginBottom","marginTop","Doctors","classes","BASE_URL","_React$useState","React","_React$useState2","doctors","setDoctors","_React$useState3","_React$useState4","selectedDoctor","setSelectedUser","_React$useState5","_React$useState6","value","setValue","_React$useState7","_React$useState8","visible","setVisibility","_React$useState9","_React$useState10","showDeleteModal","setShowDeleteModal","_React$useState11","_React$useState12","fileTypes","setFileTypes","fetchDoctors","get","data","fetchSearch","_ref2","_callee2","_context2","formatDate","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","useEffect","checkFileType","_ref3","_callee3","doctor","field","img","_context3","Image","onload","prevFileTypes","_objectSpread","_defineProperty","onerror","src","error","console","_x","_x2","filter","user","forEach","Fragment","ShowSelectedDoctor","direction","justifyContent","alignItems","marginRight","OutlinedInput","onChange","event","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","aria-describedby","inputProps","labelWidth","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","whiteSpace","TableBody","map","index","component","iqama_number","startsWith","href","copy_of_iqama_number","rel","date_of_birth","mobile_number","email","nationality","scfhs_registration","copy_of_scfhs_registration_card","current_employer_name","current_employer_license_num","current_employer_city","current_employer_website","cv","personal_photo","is_verified","created_at","last_login","showSelectedDoctor","_props$doctor","_props$doctor2","_props$doctor3","_props$doctor4","_props$doctor5","_React$useState13","_React$useState14","userId","setUserId","_React$useState15","_React$useState16","isImage","setIsImage","handleSubmit","_ref4","_callee4","bodyFormData","_context4","FormData","append","headers","log","_x3","_ref5","_callee5","fileUrl","_context5","abrupt","Promise","resolve","reject","t0","_x4","_ref6","_callee6","copyOfIqamaNumberIsImage","copyOfScfhsRegistrationCardIsImage","personalPhotoIsImage","cvIsImage","_context6","sent","copyOfIqamaNumber","copyOfScfhsRegistrationCard","personalPhoto","checkImageType","displayImg","imgSrc","document","getElementById","display","hideImg","MuiTypography","variant","gutterBottom","cursor","textDecoration","alt","type","disableElevation","_formattedDate$split3","_formattedDate$split4","onSubmit","e","preventDefault","undefined","contract","files","name","no_objection_letter","additional_attachment"],"mappings":"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","file":"static/js/15.bf74bd76.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container, ListGroup} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\n\r\nexport const ConfirmDeleteModal = (props) => {\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleDelete = async () => {\r\n        await axios({\r\n            method: 'DELETE',\r\n            url: `${BASE_URL}/user/${props?.patient.id}/delete`\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload();\r\n            })\r\n            .catch(function (response) {\r\n                alert('An error occured!');\r\n            });\r\n    };\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleClose}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props?.patient.full_name}>\r\n                                            <h2>Are you sure you want to delete this {props?.is_doctor ? 'doctor?' : 'patient?'}</h2>\r\n                                            <Button style={{color: 'red'}} onClick={handleDelete}>\r\n                                                Yes\r\n                                            </Button>\r\n                                            <Button style={{color: 'green'}} onClick={props?.handleClose}>\r\n                                                No\r\n                                            </Button>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {useEffect} from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button, OutlinedInput, InputAdornment} from '@material-ui/core';\r\n\r\nimport {gridSpacing} from '../../store/constant';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {IconSearch} from '@tabler/icons';\r\n\r\nimport axios from 'axios';\r\n\r\nimport MuiTypography from '@material-ui/core/Typography';\r\n\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport {ConfirmDeleteModal} from './ConfirmDeleteModal';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nexport default function Doctors() {\r\n    const classes = useStyles();\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    const [doctors, setDoctors] = React.useState([]);\r\n    const [selectedDoctor, setSelectedUser] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [visible, setVisibility] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [fileTypes, setFileTypes] = React.useState({});\r\n\r\n    const fetchDoctors = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setDoctors(response.data);\r\n        });\r\n    };\r\n    const fetchSearch = async () => {\r\n        await axios.get(`${BASE_URL}/search?query=${value}`).then((response) => {\r\n            setDoctors(response.data);\r\n        });\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const closePopup = () => {\r\n        setVisibility(false);\r\n    };\r\n    const closeDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const showDeletePopUpModal = (patient) => {\r\n        setShowDeleteModal(true);\r\n        setSelectedUser(patient);\r\n    };\r\n    const showSelectedDoctor = (doctor) => {\r\n        setVisibility(true);\r\n        setSelectedUser(doctor);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.value === '') {\r\n            setValue(event.target.value);\r\n            fetchDoctors();\r\n        } else {\r\n            setValue(event.target.value);\r\n            fetchSearch();\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        const checkFileType = async (doctor, field) => {\r\n            try {\r\n                const img = new Image();\r\n                img.onload = function () {\r\n                    // If the image is successfully loaded, it's an image\r\n                    setFileTypes((prevFileTypes) => ({\r\n                        ...prevFileTypes,\r\n                        [doctor.id]: {\r\n                            ...prevFileTypes[doctor.id],\r\n                            [field]: 'image'\r\n                        }\r\n                    }));\r\n                };\r\n                img.onerror = function () {\r\n                    // If an error occurs during loading, it's not an image\r\n                    setFileTypes((prevFileTypes) => ({\r\n                        ...prevFileTypes,\r\n                        [doctor.id]: {\r\n                            ...prevFileTypes[doctor.id],\r\n                            [field]: 'non-image'\r\n                        }\r\n                    }));\r\n                };\r\n                img.src = doctor[field];\r\n            } catch (error) {\r\n                console.error(`Error checking file type for doctor ${doctor.id}, field ${field}:`, error);\r\n            }\r\n        };\r\n\r\n        // Iterate through doctors and check file type for each field\r\n        doctors\r\n            ?.filter((user) => user.is_doctor)\r\n            .forEach((doctor) => {\r\n                const fieldsToCheck = ['copy_of_iqama_number', 'copy_of_scfhs_registration_card', 'cv', 'personal_photo'];\r\n\r\n                fieldsToCheck.forEach((field) => {\r\n                    if (!fileTypes[doctor.id] || !fileTypes[doctor.id][field]) {\r\n                        checkFileType(doctor, field);\r\n                    }\r\n                });\r\n            });\r\n    }, [doctors]);\r\n    useEffect(() => {\r\n        fetchDoctors();\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            {showDeleteModal && <ConfirmDeleteModal patient={selectedDoctor} handleClose={closeDeleteModal} />}\r\n            {visible && <ShowSelectedDoctor doctor={selectedDoctor} handleClose={closePopup} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems={'center'}>\r\n                            <Grid item>\r\n                                <CardHeader title=\"Registered Doctors\" />\r\n                            </Grid>\r\n                            <Grid item style={{marginRight: '25px'}}>\r\n                                <OutlinedInput\r\n                                    className={classes.searchControl}\r\n                                    id=\"input-search-profile\"\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Search doctors\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    aria-describedby=\"search-helper-text\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'weight'\r\n                                    }}\r\n                                    labelWidth={0}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>#</TableCell>\r\n                                        <TableCell>Doctor name</TableCell>\r\n                                        <TableCell align=\"left\">ID/Iqama number</TableCell>\r\n                                        <TableCell align=\"left\">Copy of iqama number</TableCell>\r\n                                        <TableCell align=\"left\" style={{whiteSpace: 'nowrap'}}>\r\n                                            Date of birth\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">Mobile number</TableCell>\r\n                                        <TableCell align=\"left\">E-mail</TableCell>\r\n                                        <TableCell align=\"left\">Nationality</TableCell>\r\n                                        <TableCell align=\"left\">SCFHS Registration</TableCell>\r\n                                        <TableCell align=\"left\">Copy of scfhs registration card</TableCell>\r\n                                        <TableCell align=\"left\">Current Employer Name</TableCell>\r\n                                        <TableCell align=\"left\">Current Employer License Number</TableCell>\r\n                                        <TableCell align=\"left\">Current Employer City Location </TableCell>\r\n                                        <TableCell align=\"left\">Current Employer Website</TableCell>\r\n                                        <TableCell align=\"left\">CV/Resume</TableCell>\r\n                                        <TableCell align=\"left\">Personal photo</TableCell>\r\n                                        <TableCell align=\"left\">Verifed</TableCell>\r\n                                        <TableCell align=\"left\">Registered date</TableCell>\r\n                                        <TableCell align=\"left\">Last login</TableCell>\r\n                                        <TableCell align=\"left\"></TableCell>\r\n                                        <TableCell align=\"left\"></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {doctors &&\r\n                                        doctors\r\n                                            ?.filter((user) => user.is_doctor)\r\n                                            .map((doctor, index) => (\r\n                                                <TableRow key={doctor.id}>\r\n                                                    <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                                    <TableCell component=\"th\">{doctor.full_name}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.iqama_number}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {/* Check if file type is available for the doctor and field */}\r\n                                                        {fileTypes[doctor.id] &&\r\n                                                            fileTypes[doctor.id]['copy_of_iqama_number'] &&\r\n                                                            (fileTypes[doctor.id]['copy_of_iqama_number'].startsWith('image') ? (\r\n                                                                <a\r\n                                                                    href={doctor.copy_of_iqama_number}\r\n                                                                    target=\"_blank\"\r\n                                                                    rel=\"noopener noreferrer\"\r\n                                                                >\r\n                                                                    Image\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <a\r\n                                                                    href={doctor.copy_of_iqama_number}\r\n                                                                    target=\"_blank\"\r\n                                                                    rel=\"noopener noreferrer\"\r\n                                                                >\r\n                                                                    File\r\n                                                                </a>\r\n                                                            ))}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.date_of_birth}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.mobile_number}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.email}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.nationality}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.scfhs_registration}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {fileTypes[doctor.id] &&\r\n                                                            fileTypes[doctor.id]['copy_of_scfhs_registration_card'] &&\r\n                                                            (fileTypes[doctor.id]['copy_of_scfhs_registration_card'].startsWith('image') ? (\r\n                                                                <a\r\n                                                                    href={doctor.copy_of_scfhs_registration_card}\r\n                                                                    target=\"_blank\"\r\n                                                                    rel=\"noopener noreferrer\"\r\n                                                                >\r\n                                                                    Image\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <a\r\n                                                                    href={doctor.copy_of_scfhs_registration_card}\r\n                                                                    target=\"_blank\"\r\n                                                                    rel=\"noopener noreferrer\"\r\n                                                                >\r\n                                                                    File\r\n                                                                </a>\r\n                                                            ))}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.current_employer_name}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.current_employer_license_num}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.current_employer_city}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.current_employer_website}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {fileTypes[doctor.id] &&\r\n                                                            fileTypes[doctor.id]['cv'] &&\r\n                                                            (fileTypes[doctor.id]['cv'].startsWith('image') ? (\r\n                                                                <a href={doctor.cv} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                                    Image\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <a href={doctor.cv} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                                    File\r\n                                                                </a>\r\n                                                            ))}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {fileTypes[doctor.id] &&\r\n                                                            fileTypes[doctor.id]['personal_photo'] &&\r\n                                                            (fileTypes[doctor.id]['personal_photo'].startsWith('image') ? (\r\n                                                                <a href={doctor.personal_photo} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                                    Image\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <a href={doctor.personal_photo} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                                    File\r\n                                                                </a>\r\n                                                            ))}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.is_verified === false ? 'No' : 'Yes'}</TableCell>\r\n                                                    <TableCell align=\"left\">{formatDate(doctor.created_at)}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {doctor.last_login === null ? 'N/A' : formatDate(doctor.last_login)}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" onClick={() => showSelectedDoctor(doctor)}>\r\n                                                        <img src=\"images/eye.png\" id=\"delete-icon\" />\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" onClick={() => showDeletePopUpModal(doctor)}>\r\n                                                        <img src=\"images/trash-bin.png\" id=\"delete-icon\" />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst ShowSelectedDoctor = (props) => {\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n    // const [doctors, setDoctors] = React.useState([]);\r\n    const [userId, setUserId] = React.useState(null);\r\n    const [isImage, setIsImage] = React.useState(false);\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const handleSubmit = async (id) => {\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('is_verified', true);\r\n        axios({\r\n            method: 'put',\r\n            url: `${BASE_URL}/update-user/${id}/`,\r\n            data: bodyFormData,\r\n            headers: {'Content-Type': 'application/json'}\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload(false);\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n    };\r\n\r\n    const handleSubmitContract = (e) => {\r\n        e.preventDefault();\r\n        var bodyFormData = new FormData();\r\n        if (e.target.contract.files[0] === undefined) {\r\n            bodyFormData.append('contract', null);\r\n        } else {\r\n            bodyFormData.append('contract', e.target.contract.files[0]);\r\n        }\r\n        axios({\r\n            method: 'put',\r\n            url: `${BASE_URL}/update-user/${userId}/`,\r\n            data: bodyFormData,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload(false);\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n    };\r\n    const handleSubmitNonObjectionLetter = (e) => {\r\n        e.preventDefault();\r\n        var bodyFormData = new FormData();\r\n\r\n        if (e.target.no_objection_letter.files[0] === undefined) {\r\n            bodyFormData.append('no_objection_letter', null);\r\n        } else {\r\n            bodyFormData.append('no_objection_letter', e.target.no_objection_letter.files[0]);\r\n        }\r\n        axios({\r\n            method: 'put',\r\n            url: `${BASE_URL}/update-user/${userId}/`,\r\n            data: bodyFormData,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload(false);\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n    };\r\n    const handleSubmitAdditionalFiles = (e) => {\r\n        e.preventDefault();\r\n        var bodyFormData = new FormData();\r\n        if (e.target.additional_attachment.files[0] === undefined) {\r\n            bodyFormData.append('additional_attachment', null);\r\n        } else {\r\n            bodyFormData.append('additional_attachment', e.target.additional_attachment.files[0]);\r\n        }\r\n        axios({\r\n            method: 'put',\r\n            url: `${BASE_URL}/update-user/${userId}/`,\r\n            data: bodyFormData,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload(false);\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        const checkFileType = async (fileUrl) => {\r\n            try {\r\n                return new Promise((resolve, reject) => {\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        // If the image is successfully loaded, it's an image\r\n                        resolve(true);\r\n                    };\r\n                    img.onerror = function () {\r\n                        // If an error occurs during loading, it's not an image\r\n                        resolve(false);\r\n                    };\r\n                    img.src = fileUrl;\r\n                });\r\n            } catch (error) {\r\n                console.error('Error checking file type:', error);\r\n                return false;\r\n            }\r\n        };\r\n\r\n        const checkImageType = async () => {\r\n            const copyOfIqamaNumberIsImage = await checkFileType(props.doctor.copy_of_iqama_number);\r\n            const copyOfScfhsRegistrationCardIsImage = await checkFileType(props.doctor.copy_of_scfhs_registration_card);\r\n            const personalPhotoIsImage = await checkFileType(props.doctor.personal_photo);\r\n            const cvIsImage = await checkFileType(props.doctor.cv);\r\n\r\n            setIsImage({\r\n                copyOfIqamaNumber: copyOfIqamaNumberIsImage,\r\n                copyOfScfhsRegistrationCard: copyOfScfhsRegistrationCardIsImage,\r\n                personalPhoto: personalPhotoIsImage,\r\n                cv: cvIsImage\r\n            });\r\n        };\r\n\r\n        checkImageType();\r\n    }, [props.patient]);\r\n\r\n    const displayImg = (imgSrc) => {\r\n        document.getElementById('full-image').src = imgSrc;\r\n        var dImg = document.getElementById('image-viewer');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer');\r\n        hImg.style.display = 'none';\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <Card className=\"popup-container\">\r\n                    <CardHeader title=\"Consultation\" />\r\n                    <Divider />\r\n                    <CardContent className=\"popup-body\" id=\"popupCustom\" style={{top: '235px'}}>\r\n                        <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\r\n                            X\r\n                        </Button>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SubCard title={props.doctor.full_name}>\r\n                                    <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Doctor name: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.full_name}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                ID/Iqama number: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.iqama_number}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Copy of ID/Iqama number: &nbsp;\r\n                                                {isImage.copyOfIqamaNumber ? (\r\n                                                    <span\r\n                                                        id=\"small-text\"\r\n                                                        onClick={() => displayImg(props.doctor.copy_of_iqama_number)}\r\n                                                        style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                    >\r\n                                                        Image\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    <a href={props.doctor.copy_of_iqama_number} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                        File\r\n                                                    </a>\r\n                                                )}\r\n                                                {isImage.copyOfIqamaNumber && (\r\n                                                    <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                        <span className=\"closed\">&times;</span>\r\n                                                        <img className=\"modal-content\" id=\"full-image\" alt=\"Image\" />\r\n                                                    </div>\r\n                                                )}\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Date of birth: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.date_of_birth}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Mobile number: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.mobile_number}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                E-mail: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.email}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Nationality: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.nationality}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                SCFHS registration: &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.scfhs_registration}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Copy of SCFHS registration : &nbsp;\r\n                                                {isImage.copyOfScfhsRegistrationCard ? (\r\n                                                    <span\r\n                                                        id=\"small-text\"\r\n                                                        onClick={() => displayImg(props.doctor.copy_of_scfhs_registration_card)}\r\n                                                        style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                    >\r\n                                                        Image\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    <a\r\n                                                        href={props.doctor.copy_of_scfhs_registration_card}\r\n                                                        target=\"_blank\"\r\n                                                        rel=\"noopener noreferrer\"\r\n                                                    >\r\n                                                        File\r\n                                                    </a>\r\n                                                )}\r\n                                                {isImage.copyOfScfhsRegistrationCard && (\r\n                                                    <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                        <span className=\"closed\">&times;</span>\r\n                                                        <img className=\"modal-content\" id=\"full-image\" alt=\"Image\" />\r\n                                                    </div>\r\n                                                )}\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer Name : &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.current_employer_name}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer License Number : &nbsp;\r\n                                                <span id=\"small-text\">\r\n                                                    {props?.doctor?.current_employer_license_num\r\n                                                        ? props?.doctor?.current_employer_license_num\r\n                                                        : 'N/A'}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer City Location : &nbsp;\r\n                                                <span id=\"small-text\">{props.doctor.current_employer_city}</span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Current Employer Website : &nbsp;\r\n                                                <a href={props.doctor.current_employer_website} id=\"small-text\">\r\n                                                    {props.doctor.current_employer_website}\r\n                                                </a>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                CV/Resume: &nbsp;\r\n                                                <span id=\"small-text\">\r\n                                                    <a href={props.doctor.cv} target=\"_blank\">\r\n                                                        File\r\n                                                    </a>\r\n                                                    {/* {props.doctor.cv} */}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Personal Photo: &nbsp;\r\n                                                {isImage.personalPhoto ? (\r\n                                                    <span\r\n                                                        id=\"small-text\"\r\n                                                        onClick={() => displayImg(props.doctor.personal_photo)}\r\n                                                        style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                    >\r\n                                                        Image\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    <a href={props.doctor.personal_photo} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                        File\r\n                                                    </a>\r\n                                                )}\r\n                                                {isImage.personalPhoto && (\r\n                                                    <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                        <span className=\"closed\">&times;</span>\r\n                                                        <img className=\"modal-content\" id=\"full-image\" alt=\"Image\" />\r\n                                                    </div>\r\n                                                )}\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Verifed: &nbsp;\r\n                                                <span id=\"small-text\">\r\n                                                    {props.doctor.is_verified === false ? (\r\n                                                        <>\r\n                                                            <span>No </span>\r\n                                                            <Button\r\n                                                                type=\"submit\"\r\n                                                                variant=\"contained\"\r\n                                                                color=\"success\"\r\n                                                                disableElevation\r\n                                                                onClick={() => handleSubmit(props.doctor.id)}\r\n                                                            >\r\n                                                                Verify!\r\n                                                            </Button>\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        'Yes'\r\n                                                    )}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                Last login: &nbsp;\r\n                                                <span id=\"small-text\">\r\n                                                    {props.doctor.last_login === null ? 'N/A' : formatDate(props.doctor.last_login)}\r\n                                                </span>\r\n                                            </MuiTypography>\r\n                                            <form onSubmit={handleSubmitContract}>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Contract: &nbsp;{' '}\r\n                                                    {props?.doctor?.contract ? (\r\n                                                        <a id=\"small-text\" href={props.doctor.contract}>\r\n                                                            Download doctor's contract.\r\n                                                        </a>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n                                                    <input type=\"file\" name=\"contract\" onClick={() => setUserId(props.doctor.id)} />\r\n                                                </MuiTypography>\r\n                                                <Button type=\"submit\" variant=\"contained\" color=\"success\" disableElevation>\r\n                                                    Upload!\r\n                                                </Button>\r\n                                            </form>\r\n                                            <form onSubmit={handleSubmitNonObjectionLetter}>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Non Objection Letter: &nbsp;{' '}\r\n                                                    {props?.doctor?.no_objection_letter ? (\r\n                                                        <a id=\"small-text\" href={props.doctor.no_objection_letter}>\r\n                                                            Download doctor's non objection letter.\r\n                                                        </a>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        name=\"no_objection_letter\"\r\n                                                        onClick={() => setUserId(props.doctor.id)}\r\n                                                    />\r\n                                                </MuiTypography>\r\n                                                <Button type=\"submit\" variant=\"contained\" color=\"success\" disableElevation>\r\n                                                    Upload!\r\n                                                </Button>\r\n                                            </form>\r\n                                            <form onSubmit={handleSubmitAdditionalFiles}>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Additional Attachment: &nbsp;\r\n                                                    {props?.doctor?.additional_attachment ? (\r\n                                                        <a id=\"small-text\" href={props.doctor.additional_attachment}>\r\n                                                            Download doctor's additional attachment.\r\n                                                        </a>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        name=\"additional_attachment\"\r\n                                                        onClick={() => setUserId(props.doctor.id)}\r\n                                                    />\r\n                                                </MuiTypography>\r\n                                                <Button type=\"submit\" variant=\"contained\" color=\"success\" disableElevation>\r\n                                                    Upload!\r\n                                                </Button>\r\n                                            </form>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </SubCard>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n"],"sourceRoot":""}