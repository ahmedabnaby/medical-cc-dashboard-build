{"version":3,"sources":["ui-component/cards/PatientsCard/index.js","ui-component/cards/DoctorsCard/index.js","ui-component/cards/ChartCard/chart/bar-chart.js","ui-component/cards/ChartCard/index.js","ui-component/cards/PopularCard/index.js","ui-component/cards/ConsultationsCard/index.js","ui-component/cards/TotalIncomePatternCard/index.js","ui-component/cards/TotalIncomeCard/index.js","ui-component/UpdatePaymentAmount.js","views/dashboard/Default.js"],"names":["useStyles","makeStyles","theme","card","backgroundColor","palette","purple","main","color","overflow","position","_defineProperty","content","width","height","dark","borderRadius","top","right","breakpoints","down","opacity","padding","avatar","_objectSpread","typography","commonAvatar","largeAvatar","marginTop","avatarRight","mediumAvatar","zIndex","cardHeading","fontSize","fontWeight","marginRight","marginBottom","subHeading","avatarCricle","cursor","smallAvatar","circleIcon","transform","menuItem","EarningCard","classes","count","_React$useState","React","useState","_React$useState2","_slicedToArray","patients","setPatients","fetchPatients","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","concat","then","response","data","stop","apply","arguments","useEffect","_jsx","Card","className","children","CardContent","_jsxs","Grid","container","direction","item","alignItems","style","display","map","patient","is_doctor","Typography","primary","TotalChartCard","_React$useState3","_React$useState4","doctors","setDoctors","fetchDoctors","doctor","chartData","type","options","chart","stacked","toolbar","show","zoom","enabled","colors","value","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","horizontal","xaxis","categories","labels","yaxis","fontFamily","useSeriesColors","markers","radius","itemMargin","vertical","fill","dataLabels","grid","series","name","status","label","ChartCard","setValue","useTheme","count2","_useState","_useState2","_useState3","_useState4","calls","setCalls","secondary","barChart","borderColor","light","fetchCalls","spacing","gridSpacing","xs","justifyContent","variant","call","is_new","TextField","id","select","onChange","e","target","option","MenuItem","Chart","cardAction","paddingTop","primaryLight","divider","avatarSuccess","success","marginLeft","successDark","avatarError","orange","errorDark","PopularCard","BASE_URL","consultations","setConsultations","selectedConsultation","setSelectedConsultation","visible","setVisibility","_React$useState5","_React$useState6","visibleCreateConsultation","setVisiblityCreateConsultation","_React$useState7","_React$useState8","users","setUsers","fetchUsers","fetchConsultations","_ref2","_callee2","_context2","reverse","formatDate","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","ShowSelectedConsultation","consultation","handleClose","CreateConsultation","alignContent","Button","disableElevation","onClick","slice","consultaion","chief_complaint","user","patient_id","_Fragment","full_name","created_at","doctor_id","Divider","CardActions","Link","component","RouterLink","to","props","_React$useState9","_React$useState10","_ref3","_callee3","_context3","_formattedDate$split3","_formattedDate$split4","console","log","CardHeader","title","sm","SubCard","MuiTypography","gutterBottom","history_of_illness","review_of_systems","examination","assessment","sick_leave","updated_at","useCustomStyles","table","minWidth","searchControl","paddingRight","paddingLeft","_React$useState11","_React$useState12","_React$useState13","_React$useState14","patientSearchResult","setPatientSearchResult","_React$useState15","_React$useState16","setShow","_React$useState17","_React$useState18","showPatient","setShowPatient","_React$useState19","_React$useState20","doctorSearchResult","setDoctorSearchResult","_React$useState21","_React$useState22","patientId","setPatientId","_React$useState23","_React$useState24","doctorId","setDoctorId","setVisible","_ref4","_callee4","_context4","Popup","_ref5","modalRef","useRef","closeWithAnimation","current","classList","add","remove","ref","href","src","alt","setTimeout","fetchSearch","_ref6","_callee5","_context5","_x","handleSubmit","_ref7","_callee6","bodyFormData","_context6","preventDefault","FormData","append","undefined","medication","method","url","headers","showPopup","catch","_x2","onSubmit","FormControl","fullWidth","InputLabel","OutlinedInput","event","placeholder","startAdornment","InputAdornment","IconSearch","stroke","size","aria-describedby","inputProps","labelWidth","filter","iqama_number","index","TextareaAutosize","defaultValue","ConsultationsCard","background","paddingBottom","TotalIncomePatternCard","consultationCosts","List","ListItem","disableGutters","ListItemAvatar","Avatar","TableChartOutlinedIcon","ListItemText","warning","grey","TotalIncomeCard","StorefrontTwoToneIcon","UpdatePaymentAmount","isModalOpen","handleModalClose","onConsultationCostsChange","setConsultationCosts","getConsultationPrice","lastObject","sent","length","amount","toString","error","t0","handleUpdateAmount","post","Modal","open","onClose","aria-labelledby","left","outline","textAlign","Input","border","Dashboard","history","useHistory","routeChange","route","path","push","setModalOpen","md","PatientsCard","DoctorsCard"],"mappings":"+QAMMA,EAAYC,aAAW,SAACC,GAAK,MAAM,CACrCC,KAAM,CACFC,gBAAiBF,EAAMG,QAAQC,OAAOC,KACtCC,MAAO,OACPC,SAAU,SACVC,SAAU,WACV,UAASC,YAAA,CACLC,QAAS,KACTF,SAAU,WACVG,MAAO,QACPC,OAAQ,QACRV,gBAAiBF,EAAMG,QAAQC,OAAOS,KACtCC,aAAc,MACdC,IAAK,QACLC,MAAO,SACNhB,EAAMiB,YAAYC,KAAK,MAAQ,CAC5BH,IAAK,SACLC,MAAO,WAGf,WAAUP,YAAA,CACNC,QAAS,KACTF,SAAU,WACVG,MAAO,QACPC,OAAQ,QACRV,gBAAiBF,EAAMG,QAAQC,OAAOS,KACtCC,aAAc,MACdC,IAAK,SACLC,MAAO,QACPG,QAAS,IACRnB,EAAMiB,YAAYC,KAAK,MAAQ,CAC5BH,IAAK,SACLC,MAAO,WAInBN,QAAS,CACLU,QAAS,mBAEbC,OAAMC,oCAAA,GACCtB,EAAMuB,WAAWC,cACjBxB,EAAMuB,WAAWE,aAAW,IAC/BvB,gBAAiBF,EAAMG,QAAQC,OAAOS,KACtCa,UAAW,QAEfC,YAAWL,oCAAA,GACJtB,EAAMuB,WAAWC,cACjBxB,EAAMuB,WAAWK,cAAY,IAChC1B,gBAAiBF,EAAMG,QAAQC,OAAOC,KACtCC,MAAON,EAAMG,QAAQC,OAAO,KAC5ByB,OAAQ,IAEZC,YAAa,CACTC,SAAU,WACVC,WAAY,IACZC,YAAa,MACbP,UAAW,OACXQ,aAAc,OAElBC,WAAY,CACRJ,SAAU,SACVC,WAAY,IACZ1B,MAAON,EAAMG,QAAQC,OAAO,MAEhCgC,aAAYd,wBAAA,CACRe,OAAQ,WACLrC,EAAMuB,WAAWe,aAAW,IAC/BpC,gBAAiBF,EAAMG,QAAQC,OAAO,KACtCE,MAAON,EAAMG,QAAQC,OAAOS,OAEhC0B,WAAY,CACRC,UAAW,4BAEfC,SAAU,CACNR,YAAa,OACbF,SAAU,eAyCHW,EArCK,WAChB,IAAMC,EAAU7C,IACZ8C,EAAQ,EAEZC,EAAgCC,IAAMC,SAAS,IAAGC,EAAAC,YAAAJ,EAAA,GAA3CK,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAEtBI,EAAa,eAAAC,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZC,IAAMC,IAAI,GAADC,OAJF,kCAIc,YAAWC,MAAK,SAACC,GACxCf,EAAYe,EAASC,SACtB,KAAD,mBAAAR,EAAAS,UAAAX,OACL,kBAJkB,OAAAJ,EAAAgB,MAAA,KAAAC,YAAA,GAUnB,OAJAC,qBAAU,WACNnB,MACD,IAGCoB,cAACC,IAAI,CAACC,UAAW/B,EAAQ1C,KAAK0E,SAC1BH,cAACI,IAAW,CAACF,UAAW/B,EAAQjC,QAAQiE,SACpCE,eAACC,IAAI,CAACC,WAAS,EAACC,UAAU,SAAQL,SAAA,CAC9BH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACM,IAAI,CAACC,WAAS,EAACG,WAAW,SAAQP,SAC/BE,eAACC,IAAI,CAACG,MAAI,EAAAN,SAAA,CACNH,cAAA,OAAKW,MAAO,CAACC,QAAS,QAAQT,SAAU,OAARzB,QAAQ,IAARA,OAAQ,EAARA,EAAUmC,KAAI,SAACC,GAAO,OAAMA,EAAQC,WAAa3C,SACjF4B,cAACgB,IAAU,CAACd,UAAW/B,EAAQb,YAAY6C,SAAE/B,WAIzD4B,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACgB,IAAU,CAACd,UAAW/B,EAAQR,WAAWwC,SAAC,kCC9G7D7E,EAAYC,aAAW,SAACC,GAAK,MAAM,CACrCC,KAAM,CACFC,gBAAiBF,EAAMG,QAAQsF,QAAQpF,KACvCC,MAAO,OACPC,SAAU,SACVC,SAAU,WACV,UAASC,YAAA,CACLC,QAAS,KACTF,SAAU,WACVG,MAAO,QACPC,OAAQ,QACRV,gBAAiBF,EAAMG,QAAQsF,QAAQ5E,KACvCC,aAAc,MACdC,IAAK,QACLC,MAAO,SACNhB,EAAMiB,YAAYC,KAAK,MAAQ,CAC5BH,IAAK,SACLC,MAAO,WAGf,WAAUP,YAAA,CACNC,QAAS,KACTF,SAAU,WACVG,MAAO,QACPC,OAAQ,QACRV,gBAAiBF,EAAMG,QAAQsF,QAAQ5E,KACvCC,aAAc,MACdC,IAAK,SACLC,MAAO,QACPG,QAAS,IACRnB,EAAMiB,YAAYC,KAAK,MAAQ,CAC5BH,IAAK,SACLC,MAAO,WAInBN,QAAS,CACLU,QAAS,mBAEbC,OAAMC,oCAAA,GACCtB,EAAMuB,WAAWC,cACjBxB,EAAMuB,WAAWE,aAAW,IAC/BvB,gBAAiBF,EAAMG,QAAQsF,QAAQ5E,KACvCP,MAAO,OACPoB,UAAW,QAEfC,YAAWL,oCAAA,GACJtB,EAAMuB,WAAWC,cACjBxB,EAAMuB,WAAWK,cAAY,IAChC1B,gBAAiBF,EAAMG,QAAQsF,QAAQpF,KACvCC,MAAON,EAAMG,QAAQsF,QAAQ,KAC7B5D,OAAQ,IAEZC,YAAa,CACTC,SAAU,WACVC,WAAY,IACZC,YAAa,MACbP,UAAW,OACXQ,aAAc,OAElBC,WAAY,CACRJ,SAAU,SACVC,WAAY,IACZ1B,MAAON,EAAMG,QAAQsF,QAAQ,MAEjCrD,aAAYd,wBAAA,GACLtB,EAAMuB,WAAWe,aAAW,IAC/BD,OAAQ,UACRnC,gBAAiBF,EAAMG,QAAQsF,QAAQ,KACvCnF,MAAON,EAAMG,QAAQsF,QAAQ5E,OAEjC0B,WAAY,CACRC,UAAW,4BAEfC,SAAU,CACNR,YAAa,OACbF,SAAU,eAgDH2D,EA5CQ,WACnB,IAAM/C,EAAU7C,IACZ8C,EAAQ,EACZC,EAAgCC,IAAMC,SAAS,MAAKC,EAAAC,YAAAJ,EAAA,GAEpD8C,GAFe3C,EAAA,GAAaA,EAAA,GAEEF,IAAMC,SAAS,KAAG6C,EAAA3C,YAAA0C,EAAA,GAAzCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAY,eAAA1C,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACXC,IAAMC,IAAI,GAADC,OAJF,kCAIc,YAAWC,MAAK,SAACC,GACxC4B,EAAW5B,EAASC,SACrB,KAAD,mBAAAR,EAAAS,UAAAX,OACL,kBAJiB,OAAAJ,EAAAgB,MAAA,KAAAC,YAAA,GAgBlB,OAHAC,qBAAU,WACNwB,MACD,IAECvB,cAACC,IAAI,CAACC,UAAW/B,EAAQ1C,KAAK0E,SAC1BH,cAACI,IAAW,CAACF,UAAW/B,EAAQjC,QAAQiE,SACpCE,eAACC,IAAI,CAACC,WAAS,EAACC,UAAU,SAAQL,SAAA,CAC9BH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACM,IAAI,CAACC,WAAS,EAACG,WAAW,SAAQP,SAC/BE,eAACC,IAAI,CAACG,MAAI,EAAAN,SAAA,CACNH,cAAA,OAAKW,MAAO,CAACC,QAAS,QAAQT,SAAS,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASR,KAAI,SAACW,GAAM,OAAKA,EAAOT,WAAa3C,SAC7E4B,cAACgB,IAAU,CAACd,UAAW/B,EAAQb,YAAY6C,SAAE/B,WAIzD4B,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACgB,IAAU,CAACd,UAAW/B,EAAQR,WAAWwC,SAAC,iC,6DC9BpDsB,EAxFG,CACdrF,OAAQ,IACRsF,KAAM,MACNC,QAAS,CACLC,MAAO,CACHC,SAAS,EACTC,QAAS,CACLC,MAAM,GAEVC,KAAM,CACFC,SAAS,IAGjBC,OAAQ,CAACC,IAAqB,cAAGA,IAAe,QAAGA,IAAe,QAAGA,IAAoB,cACzFC,WAAY,CACR,CACIC,WAAY,IACZV,QAAS,CACLW,OAAQ,CACJtG,SAAU,SACVuG,SAAU,GACVC,QAAS,MAKzBC,YAAa,CACTC,IAAK,CACDC,YAAY,IAGpBC,MAAO,CACHlB,KAAM,SACNmB,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvDC,OAAQ,CACJnC,MAAO,CACHuB,OAAQ,MAIpBa,MAAO,CACHD,OAAQ,CACJnC,MAAO,CACHuB,OAAQ,MAIpBI,OAAQ,CACJP,MAAM,EACNxE,SAAU,OACVyF,WAAW,uBACXhH,SAAU,SACVuG,QAAS,GACTO,OAAQ,CACJZ,OAAQC,IAAe,QACvBc,iBAAiB,GAErBC,QAAS,CACL/G,MAAO,GACPC,OAAQ,GACR+G,OAAQ,GAEZC,WAAY,CACRT,WAAY,GACZU,SAAU,IAGlBC,KAAM,CACF5B,KAAM,SAEV6B,WAAY,CACRtB,SAAS,GAEbuB,KAAM,CACFzB,MAAM,IAGd0B,OAAQ,CACJ,CACIC,KAAM,WACN/D,KAAM,CAAC,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,KAEpC,CACI+D,KAAM,gBACN/D,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OC9ErCgE,EAAS,CAKX,CACIxB,MAAO,QACPyB,MAAO,cAEX,CACIzB,MAAO,OACPyB,MAAO,cA+EAC,EA3EG,WACd,IAAAxF,EAA0BC,IAAMC,SAAS,SAAQC,EAAAC,YAAAJ,EAAA,GAA1C8D,EAAK3D,EAAA,GAAEsF,EAAQtF,EAAA,GAChBhD,EAAQuI,cACV3F,EAAQ,EACR4F,EAAS,EAEbC,EAA0C1F,mBAAS,IAAG2F,EAAAzF,YAAAwF,EAAA,GACtDE,GADoBD,EAAA,GAAkBA,EAAA,GACZ3F,mBAAS,KAAG6F,EAAA3F,YAAA0F,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBnD,EAAUzF,EAAMG,QAAQ4I,UAAU1I,KACxC2I,EAAS7C,QAAQ6B,KAAKiB,YAAcjJ,EAAMG,QAAQsF,QAAQyD,MAC1DF,EAAS7C,QAAQoB,MAAMD,OAAOnC,MAAMuB,OAAS,CAAC1G,EAAMG,QAAQ4I,UAAU1I,MACtE2I,EAAS7C,QAAQiB,MAAME,OAAOnC,MAAMuB,OAAS,CAACjB,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,GACpG,IAAM0D,EAAU,eAAA9F,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTC,IAAMC,IAAI,GAADC,OATF,kCASc,YAAWC,MAAK,SAACC,GACxC4E,EAAS5E,EAASC,SACnB,KAAD,mBAAAR,EAAAS,UAAAX,OACL,kBAJe,OAAAJ,EAAAgB,MAAA,KAAAC,YAAA,GAQhB,OAHAC,qBAAU,WACN4E,MACD,IAEC3E,cAACC,IAAI,CAAAE,SACDH,cAACI,IAAW,CAAAD,SACRE,eAACC,IAAI,CAACC,WAAS,EAACqE,QAASC,IAAY1E,SAAA,CACjCH,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAG3E,SACdE,eAACC,IAAI,CAACC,WAAS,EAACG,WAAW,SAASqE,eAAe,gBAAe5E,SAAA,CAC9DH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAACC,IAAI,CAACC,WAAS,EAACC,UAAU,SAASoE,QAAS,EAAEzE,SAAA,CAC1CH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACgB,IAAU,CAACgE,QAAQ,YAAW7E,SAAC,8BAEpCH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAACW,IAAU,CAACgE,QAAQ,KAAI7E,SAAA,CACpBH,cAAA,OAAKW,MAAO,CAACC,QAAS,QAAQT,SAAO,OAALkE,QAAK,IAALA,OAAK,EAALA,EAAOxD,KAAI,SAACoE,GAAI,OAAKA,GAAQjB,SAC5DA,OAGThE,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACgB,IAAU,CAACgE,QAAQ,YAAW7E,SAAC,6BAEpCH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAACW,IAAU,CAACgE,QAAQ,KAAI7E,SAAA,CACpBH,cAAA,OAAKW,MAAO,CAACC,QAAS,QAAQT,SAAO,OAALkE,QAAK,IAALA,OAAK,EAALA,EAAOxD,KAAI,SAACoE,GAAI,OAAMA,EAAKC,QAAU9G,SACpEA,YAKjB4B,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACmF,IAAS,CACNC,GAAG,2BACHC,QAAM,EACNlD,MAAOA,EACPmD,SAAU,SAACC,GAAC,OAAKzB,EAASyB,EAAEC,OAAOrD,QACnC6C,QAAQ,WAAU7E,SAEjBwD,EAAO9C,KAAI,SAAC4E,GAAM,OACfzF,cAAC0F,IAAQ,CAAoBvD,MAAOsD,EAAOtD,MAAMhC,SAC5CsF,EAAO7B,OADG6B,EAAOtD,mBAQ1CnC,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAG3E,SACdH,cAAC2F,IAAK7I,YAAA,GAAK0H,c,mHC3D7BlJ,EAAYC,aAAW,SAACC,GAAK,MAAM,CACrCoK,WAAY,CACRhJ,QAAS,OACTiJ,WAAY,EACZd,eAAgB,UAEpBe,aAAc,CACVhK,MAAON,EAAMG,QAAQsF,QAAQ,KAC7BpD,OAAQ,WAEZkI,QAAS,CACL7I,UAAW,OACXQ,aAAc,QAElBsI,cAAe,CACX7J,MAAO,OACPC,OAAQ,OACRE,aAAc,MACdZ,gBAAiBF,EAAMG,QAAQsK,QAAQvB,MACvC5I,MAAON,EAAMG,QAAQsK,QAAQ5J,KAC7B6J,WAAY,QAEhBC,YAAa,CACTrK,MAAON,EAAMG,QAAQsK,QAAQ5J,MAEjC+J,YAAa,CACTjK,MAAO,OACPC,OAAQ,OACRE,aAAc,MACdZ,gBAAiBF,EAAMG,QAAQ0K,OAAO3B,MACtC5I,MAAON,EAAMG,QAAQ0K,OAAOhK,KAC5B6J,WAAY,QAEhBI,UAAW,CACPxK,MAAON,EAAMG,QAAQ0K,OAAOhK,UAkIrBkK,EA9HK,WAChB,IAAMpI,EAAU7C,IACVkL,EAAW,kCACjBvC,EAA0C1F,mBAAS,IAAG2F,EAAAzF,YAAAwF,EAAA,GAA/CwC,EAAavC,EAAA,GAAEwC,EAAgBxC,EAAA,GACtC7F,EAAwDC,IAAMC,SAAS,IAAGC,EAAAC,YAAAJ,EAAA,GAAnEsI,EAAoBnI,EAAA,GAAEoI,EAAuBpI,EAAA,GACpD2C,EAAiC7C,IAAMC,UAAS,GAAM6C,EAAA3C,YAAA0C,EAAA,GAA/C0F,EAAOzF,EAAA,GAAE0F,EAAa1F,EAAA,GAC7B2F,EAAoEzI,IAAMC,UAAS,GAAMyI,EAAAvI,YAAAsI,EAAA,GAAlFE,EAAyBD,EAAA,GAAEE,EAA8BF,EAAA,GAChEG,EAA0B7I,IAAMC,SAAS,IAAG6I,EAAA3I,YAAA0I,EAAA,GAArCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAU,eAAA1I,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTC,IAAMC,IAAI,GAADC,OAAIgH,EAAQ,YAAW/G,MAAK,SAACC,GACxC4H,EAAS5H,EAASC,SACnB,KAAD,mBAAAR,EAAAS,UAAAX,OACL,kBAJe,OAAAJ,EAAAgB,MAAA,KAAAC,YAAA,GAKV0H,EAAkB,eAAAC,EAAA3I,YAAAC,IAAAC,MAAG,SAAA0I,IAAA,OAAA3I,IAAAG,MAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,cAAAsI,EAAAtI,KAAA,EACjBC,IAAMC,IAAI,GAADC,OAAIgH,EAAQ,oBAAmB/G,MAAK,SAACC,GAChDgH,EAAiBhH,EAASC,KAAKiI,cAChC,KAAD,mBAAAD,EAAA/H,UAAA8H,OACL,kBAJuB,OAAAD,EAAA5H,MAAA,KAAAC,YAAA,GAYlB+H,EAAa,SAACC,GAChB,IAIAC,EAHsB,IAAIC,KAAKF,GAAMG,mBAAmB,QADxC,CAACC,IAAK,UAAWC,MAAO,QAASC,KAAM,UAAWC,KAAM,UAAWC,OAAQ,YAIpCC,MAAM,KAAIC,EAAA/J,YAAAsJ,EAAA,GAA1DI,EAAKK,EAAA,GAAEN,EAAGM,EAAA,GAAEJ,EAAII,EAAA,GAAEH,EAAIG,EAAA,GAAEF,EAAME,EAAA,GAG/BC,EAAmBN,EAAMO,cAG/B,MAAM,GAANlJ,OAAU0I,EAAG,KAAA1I,OAAIiJ,EAAgB,KAAAjJ,OAAI4I,EAAI,KAAA5I,OAAI6I,EAAI,KAAA7I,OAAI8I,IAYzD,OAJAvI,qBAAU,WACNyH,IACAD,MACD,IAEClH,eAACJ,IAAI,CAAAE,SAAA,CACA0G,GAAW7G,cAAC2I,EAAwB,CAACC,aAAcjC,EAAsBkC,YAhC/D,WACf/B,GAAc,MAgCTG,GAA6BjH,cAAC8I,EAAkB,CAACD,YAVlC,WACpB3B,GAA+B,MAU3BlH,cAACI,IAAW,CAAAD,SACRE,eAACC,IAAI,CAACC,WAAS,EAACqE,QAASC,IAAY1E,SAAA,CACjCH,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAG3E,SACdE,eAACC,IAAI,CAACC,WAAS,EAACwI,aAAa,SAAShE,eAAe,gBAAe5E,SAAA,CAChEH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACgB,IAAU,CAACgE,QAAQ,KAAI7E,SAAC,2BAE7BH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACgJ,IAAM,CAAChE,QAAQ,YAAYlJ,MAAM,UAAUmN,kBAAgB,EAACC,QAtBjE,WACpBhC,GAA+B,IAqB+E/G,SAAC,+BAOnGH,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAG3E,SACbsG,EAAc0C,MAAM,EAAG,GAAGtI,KAAI,SAAC+H,GAAY,OACxCvI,eAACC,IAAI,CACDC,WAAS,EACTC,UAAU,SACVN,UAAU,gBAEVgJ,QAAS,kBArDHE,EAqDkCR,EApDhE9B,GAAc,QACdF,EAAwBwC,GAFK,IAACA,GAqDgDjJ,SAAA,CAEtDH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAACC,IAAI,CAACC,WAAS,EAACG,WAAW,SAASqE,eAAe,gBAAe5E,SAAA,CAC9DH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACgB,IAAU,CAACgE,QAAQ,YAAYlJ,MAAM,UAASqE,SAC1CyI,EAAaS,oBAGtBrJ,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACM,IAAI,CAACC,WAAS,EAACG,WAAW,SAASqE,eAAe,gBAAe5E,SAC9DH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACgB,IAAU,CAACgE,QAAQ,YAAYlJ,MAAM,UAASqE,SAC1CkH,EAAMxG,KACH,SAACyI,GAAI,OACDV,EAAaW,aAAeD,EAAKlE,IAC7B/E,eAAAmJ,WAAA,CAAArJ,SAAA,CACKmJ,EAAKG,UACNzJ,cAAA,SACAA,cAAA,UAAQW,MAAO,CAAC7E,MAAO,SAASqE,SAC3B0H,EAAWe,EAAac,iCAWrE1J,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACgB,IAAU,CAACgE,QAAQ,YAAYlJ,MAAM,QAAOqE,SACxCkH,EAAMxG,KAAI,SAACyI,GAAI,OAAKV,EAAae,YAAcL,EAAKlE,IAAMkE,EAAKG,iBAGxEzJ,cAAC4J,IAAO,CAAC1J,UAAW/B,EAAQ4H,YArCvB6C,EAAaxD,cA2CtCpF,cAAC6J,IAAW,CAAC3J,UAAW/B,EAAQyH,WAAWzF,SACvCH,cAAC8J,IAAI,CAACC,UAAWC,IAAYC,GAAI,iBAAiB9J,SAAC,mBAU7DwI,EAA2B,SAACuB,GAC9B,IACAC,EAA0B7L,IAAMC,SAAS,IAAG6L,EAAA3L,YAAA0L,EAAA,GAArC9C,EAAK+C,EAAA,GAAE9C,EAAQ8C,EAAA,GAEhB7C,EAAU,eAAA8C,EAAAvL,YAAAC,IAAAC,MAAG,SAAAsL,IAAA,OAAAvL,IAAAG,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,cAAAkL,EAAAlL,KAAA,EACTC,IAAMC,IAAI,GAADC,OAJF,kCAIc,YAAWC,MAAK,SAACC,GACxC4H,EAAS5H,EAASC,SACnB,KAAD,mBAAA4K,EAAA3K,UAAA0K,OACL,kBAJe,OAAAD,EAAAxK,MAAA,KAAAC,YAAA,GAKV+H,EAAa,SAACC,GAChB,IAIA0C,EAHsB,IAAIxC,KAAKF,GAAMG,mBAAmB,QADxC,CAACC,IAAK,UAAWC,MAAO,QAASC,KAAM,UAAWC,KAAM,UAAWC,OAAQ,YAIpCC,MAAM,KAAIkC,EAAAhM,YAAA+L,EAAA,GAA1DrC,EAAKsC,EAAA,GAAEvC,EAAGuC,EAAA,GAAErC,EAAIqC,EAAA,GAAEpC,EAAIoC,EAAA,GAAEnC,EAAMmC,EAAA,GAG/BhC,EAAmBN,EAAMO,cAG/B,MAAM,GAANlJ,OAAU0I,EAAG,KAAA1I,OAAIiJ,EAAgB,KAAAjJ,OAAI4I,EAAI,KAAA5I,OAAI6I,EAAI,KAAA7I,OAAI8I,IAKzD,OAHAvI,qBAAU,WACNwH,MACD,IAECvH,cAACM,IAAI,CAACC,WAAS,EAACqE,QAASC,IAAY1E,SACjCH,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAG3E,SACdE,eAACJ,IAAI,CAACC,UAAU,kBAAiBC,SAAA,CAC5BuK,QAAQC,IAAIT,GACblK,cAAC4K,IAAU,CAACC,MAAM,iBAClB7K,cAAC4J,IAAO,IACRvJ,eAACD,IAAW,CAACF,UAAU,aAAYC,SAAA,CAC/BH,cAACgJ,IAAM,CAAC5D,GAAG,WAAW8D,QAAS,kBAAMgB,EAAMrB,eAAc1I,SAAC,MAG1DH,cAACM,IAAI,CAACC,WAAS,EAACqE,QAASC,IAAY1E,SACjCH,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAIgG,GAAI,EAAE3K,SACrBH,cAAC+K,IAAO,CACJF,MAAOxD,EAAMxG,KAAI,SAACyI,GAAI,OAClBY,EAAMtB,aAAaW,YAAcD,EAAKlE,GAAKkE,EAAKG,UAAY,gBAAkB,MAChFtJ,SAEFH,cAACM,IAAI,CAACC,WAAS,EAACC,UAAU,SAAS4E,GAAG,UAAUR,QAAS,EAAEzE,SACvDE,eAACC,IAAI,CAACG,MAAI,EAAAN,SAAA,CACNE,eAAC2K,IAAa,CAAChG,QAAQ,KAAKiG,cAAY,EAAA9K,SAAA,CAAC,oBAErCH,cAAA,QAAMoF,GAAG,aAAYjF,SAChBkH,EAAMxG,KAAI,SAACyI,GAAI,OAAMY,EAAMtB,aAAae,WAAaL,EAAKlE,GAAKkE,EAAKG,UAAY,WAGzFpJ,eAAC2K,IAAa,CAAChG,QAAQ,KAAKiG,cAAY,EAAA9K,SAAA,CAAC,qBAErCH,cAAA,QAAMoF,GAAG,aAAYjF,SAChBkH,EAAMxG,KAAI,SAACyI,GAAI,OAAMY,EAAMtB,aAAaW,YAAcD,EAAKlE,GAAKkE,EAAKG,UAAY,WAG1FpJ,eAAC2K,IAAa,CAAChG,QAAQ,KAAKiG,cAAY,EAAA9K,SAAA,CAAC,aAErCH,cAAA,QAAMoF,GAAG,aAAYjF,SAAE0H,EAAWqC,EAAMtB,aAAac,iBAEzDrJ,eAAC2K,IAAa,CAAChG,QAAQ,KAAKiG,cAAY,EAAA9K,SAAA,CAAC,wBAErCH,cAAA,QAAMoF,GAAG,aAAYjF,SAAE+J,EAAMtB,aAAaS,qBAE9ChJ,eAAC2K,IAAa,CAAChG,QAAQ,KAAKiG,cAAY,EAAA9K,SAAA,CAAC,2BAErCH,cAAA,QAAMoF,GAAG,aAAYjF,SAAE+J,EAAMtB,aAAasC,wBAE9C7K,eAAC2K,IAAa,CAAChG,QAAQ,KAAKiG,cAAY,EAAA9K,SAAA,CAAC,0BAErCH,cAAA,QAAMoF,GAAG,aAAYjF,SAAE+J,EAAMtB,aAAauC,uBAE9C9K,eAAC2K,IAAa,CAAChG,QAAQ,KAAKiG,cAAY,EAAA9K,SAAA,CAAC,oBAErCH,cAAA,QAAMoF,GAAG,aAAYjF,SAAE+J,EAAMtB,aAAawC,iBAE9C/K,eAAC2K,IAAa,CAAChG,QAAQ,KAAKiG,cAAY,EAAA9K,SAAA,CAAC,mBAErCH,cAAA,QAAMoF,GAAG,aAAYjF,SAAE+J,EAAMtB,aAAayC,gBAE9ChL,eAAC2K,IAAa,CAAChG,QAAQ,KAAKiG,cAAY,EAAA9K,SAAA,CAAC,mBAErCH,cAAA,QAAMoF,GAAG,aAAYjF,SAAE+J,EAAMtB,aAAa0C,gBAE9CjL,eAAC2K,IAAa,CAAChG,QAAQ,KAAKiG,cAAY,EAAA9K,SAAA,CAAC,qBAErCH,cAAA,QAAMoF,GAAG,aAAYjF,SAAE0H,EAAWqC,EAAMtB,aAAa2C,uCAa/FC,EAAkBjQ,YAAW,CAC/BkQ,MAAO,CACHC,SAAU,KAEdC,cAAe,CACXxP,MAAO,OACPyP,aAAc,MACdC,YAAa,OACbnO,aAAc,OACdR,UAAW,UAGb4L,EAAqB,SAACoB,GACxB,IAAM/L,EAAUqN,IACVhF,EAAW,kCACjBsF,EAA0BxN,IAAMC,SAAS,IAAGwN,EAAAtN,YAAAqN,EAAA,GAArCzE,EAAK0E,EAAA,GAAEzE,EAAQyE,EAAA,GACtBC,EAAsD1N,IAAMC,SAAS,IAAG0N,EAAAxN,YAAAuN,EAAA,GAAjEE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAClDG,EAAwB9N,IAAMC,UAAS,GAAM8N,EAAA5N,YAAA2N,EAAA,GAAtCrK,EAAIsK,EAAA,GAAEC,EAAOD,EAAA,GACpBE,EAAsCjO,IAAMC,UAAS,GAAMiO,EAAA/N,YAAA8N,EAAA,GAApDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAoDrO,IAAMC,SAAS,IAAGqO,EAAAnO,YAAAkO,EAAA,GAA/DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAChDG,EAAkCzO,IAAMC,SAAS,MAAKyO,EAAAvO,YAAAsO,EAAA,GAA/CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAgC7O,IAAMC,SAAS,MAAK6O,EAAA3O,YAAA0O,EAAA,GAA7CE,EAAQD,EAAA,GAAEE,GAAWF,EAAA,GAE5BjJ,GAA8B5F,oBAAS,GAAM6F,GAAA3F,YAAA0F,GAAA,GAAtC0C,GAAOzC,GAAA,GAAEmJ,GAAUnJ,GAAA,GACpBmD,GAAU,eAAAiG,EAAA1O,YAAAC,IAAAC,MAAG,SAAAyO,IAAA,OAAA1O,IAAAG,MAAA,SAAAwO,GAAA,cAAAA,EAAAtO,KAAAsO,EAAArO,MAAA,cAAAqO,EAAArO,KAAA,EACTC,IAAMC,IAAI,GAADC,OAAIgH,EAAQ,YAAW/G,MAAK,SAACC,GACxC4H,EAAS5H,EAASC,SACnB,KAAD,mBAAA+N,EAAA9N,UAAA6N,OACL,kBAJe,OAAAD,EAAA3N,MAAA,KAAAC,YAAA,GAKV6N,GAAQ,SAAHC,GAAuB,IAAlB/E,EAAW+E,EAAX/E,YACNgF,EAAWC,iBAAO,MAElBC,EAAqB,WACnBF,EAASG,UACTH,EAASG,QAAQC,UAAUC,IAAI,WAC/BL,EAASG,QAAQC,UAAUE,OAAO,WAClCtF,MAGR,OACI7I,cAAA,OAAKoO,IAAKP,EAAU3N,UAAU,WAAUC,SACpCE,eAAA,OAAKH,UAAU,UAASC,SAAA,CACpBH,cAAA,OAAKE,UAAU,WAAUC,SACrBH,cAAA,KAAGqO,KAAK,IAAGlO,SACPH,cAAA,OAAKsO,IAA8B,2BAA4BC,IAAI,SAG3ElO,eAAA,MAAAF,SAAA,CACIH,cAAA,QAAMW,MAAO,CAAC7E,MAAO,WAAWqE,SAAC,iBAAmB,UAAOH,cAAA,QAAMW,MAAO,CAAC7E,MAAO,WAAWqE,SAAC,qBAEhGH,cAAA,OAAKE,UAAU,aAAYC,SACvBH,cAAA,OAAKsO,IAA8B,qBAAsBlJ,GAAG,cAAc8D,QAAS6E,MAEvF/N,cAAA,OAAKW,MAAO,CAACC,QAAS,QAAQT,SACzBqO,YAAW,WACRT,MACD,aAMjBU,GAAW,eAAAC,EAAA5P,YAAAC,IAAAC,MAAG,SAAA2P,EAAOrF,GAAI,OAAAvK,IAAAG,MAAA,SAAA0P,GAAA,cAAAA,EAAAxP,KAAAwP,EAAAvP,MAAA,cAAAuP,EAAAvP,KAAA,EACrBC,IAAMC,IAAI,GAADC,OAAIgH,EAAQ,kBAAAhH,OAA0B,YAAT8J,EAAqB4C,EAAsBW,IAAsBpN,MAAK,SAACC,GAC/G4H,EAAS5H,EAASC,SACnB,KAAD,mBAAAiP,EAAAhP,UAAA+O,OACL,gBAJgBE,GAAA,OAAAH,EAAA7O,MAAA,KAAAC,YAAA,GAMXgP,GAAY,eAAAC,EAAAjQ,YAAAC,IAAAC,MAAG,SAAAgQ,EAAOzJ,GAAC,IAAA0J,EAAA,OAAAlQ,IAAAG,MAAA,SAAAgQ,GAAA,cAAAA,EAAA9P,KAAA8P,EAAA7P,MAAA,OAuBC,OAtB1BkG,EAAE4J,iBAEFzE,QAAQC,IAAI0C,GACZ3C,QAAQC,IAAIsC,IACRgC,EAAe,IAAIG,UACVC,OAAO,YAAahC,GACjC4B,EAAaI,OAAO,aAAcpC,GAClCgC,EAAaI,OAAO,kBAAmB9J,EAAEC,OAAO6D,gBAAgBlH,OAChE8M,EAAaI,OAAO,qBAAsB9J,EAAEC,OAAO0F,mBAAmB/I,OACtE8M,EAAaI,OAAO,oBAAqB9J,EAAEC,OAAO2F,kBAAkBhJ,OACpE8M,EAAaI,OAAO,cAAe9J,EAAEC,OAAO4F,YAAYjJ,OACxD8M,EAAaI,OAAO,aAAc9J,EAAEC,OAAO6F,WAAWlJ,YAC3BmN,GAAvB/J,EAAEC,OAAO+J,WACTN,EAAaI,OAAO,aAAc,MAElCJ,EAAaI,OAAO,aAAc9J,EAAEC,OAAO+J,WAAWpN,YAE/BmN,GAAvB/J,EAAEC,OAAO8F,WACT2D,EAAaI,OAAO,aAAc,GAElCJ,EAAaI,OAAO,aAAc9J,EAAEC,OAAO8F,WAAWnJ,OAE1DuI,QAAQC,IAAIsE,GAAcC,EAAA7P,KAAA,GACpBC,YAAM,CACRkQ,OAAQ,OACRC,IAAI,GAADjQ,OAAKgH,EAAQ,yBAChB7G,KAAMsP,EACNS,QAAS,CAAC,eAAgB,yBAEzBjQ,MAAK,SAAUC,GACZiQ,KACAjF,QAAQC,IAAIjL,MAEfkQ,OAAM,SAAUlQ,GACbgL,QAAQC,IAAIjL,MACb,KAAD,oBAAAwP,EAAAtP,UAAAoP,OACT,gBArCiBa,GAAA,OAAAd,EAAAlP,MAAA,KAAAC,YAAA,GAsCZ6P,GAAY,WACdpC,IAAW,IAwCf,OAHAxN,qBAAU,WACNwH,OACD,IAEClH,eAACC,IAAI,CAACC,WAAS,EAACqE,QAASC,IAAY1E,SAAA,CACjCH,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAG3E,SACdE,eAACJ,IAAI,CAACC,UAAU,kBAAiBC,SAAA,CAC7BH,cAAC4K,IAAU,CAACC,MAAM,iBAClB7K,cAAC4J,IAAO,IACRvJ,eAACD,IAAW,CAACF,UAAU,uBAAuBkF,GAAG,cAAajF,SAAA,CAC1DH,cAACgJ,IAAM,CAAC5D,GAAG,WAAW8D,QAAS,kBAAMgB,EAAMrB,eAAc1I,SAAC,MAG1DH,cAACM,IAAI,CAACC,WAAS,EAACqE,QAASC,IAAY1E,SACjCH,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAIgG,GAAI,EAAE3K,SACrBH,cAAC+K,IAAO,CAACF,MAAM,sBAAqB1K,SAChCH,cAAA,QAAM8P,SAAUhB,GAAa3O,SACzBE,eAACC,IAAI,CAACC,WAAS,EAACC,UAAU,SAAS4E,GAAG,UAAUR,QAAS,EAAG1E,UAAU,YAAWC,SAAA,CAC7EH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAAC0P,IAAW,CAACC,WAAS,EAAC9P,UAAU,OAAMC,SAAA,CACnCH,cAACiQ,IAAU,CAAC7K,GAAG,2BAA0BjF,SAAC,2BAE1CH,cAACkQ,IAAa,CACVhQ,UAAW/B,EAAQwN,cACnBvG,GAAG,uBACH1B,KAAK,YACLvB,MAAO0K,EACPvH,SAtCxB,SAAC6K,GACzBzF,QAAQC,IAAIwF,EAAM3K,OAAOrD,OACzBmK,GAAQ,GACmB,KAAvB6D,EAAM3K,OAAOrD,OACb2K,EAAsBqD,EAAM3K,OAAOrD,OACnCoF,OAEAuF,EAAsBqD,EAAM3K,OAAOrD,OACnCsM,GAAY,YA+BgC2B,YAAY,iBACZC,eACIrQ,cAACsQ,IAAc,CAACtU,SAAS,QAAOmE,SAC5BH,cAACuQ,IAAU,CAACC,OAAQ,IAAKC,KAAK,SAASvQ,UAAW/B,EAAQkS,mBAGlEK,mBAAiB,qBACjBC,WAAY,CACR,aAAc,UAElBC,WAAY,IAEf/D,GACG7M,cAAAwJ,WAAA,CAAArJ,SACU,OAALkH,QAAK,IAALA,OAAK,EAALA,EACKwJ,QAAO,SAACvH,GAAI,OAAKA,EAAKvI,aACvBF,KACG,SAACW,GAAM,OACHO,GACI/B,cAAC0F,IAAQ,CAELwD,QAAS,kBAtEtD4H,EAuEuEtP,EAAOsP,aAvEhEnH,EAuE8EnI,EAAO4D,GAtE9H0H,EAAsBgE,GACtBxD,GAAY3D,QACZ2C,GAAQ,GAHkB,IAACwE,EAAcnH,GAwEgCxJ,SAEAqB,EAAOsP,cALHtP,EAAO4D,cAahDpF,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAAC0P,IAAW,CAACC,WAAS,EAAC9P,UAAU,OAAMC,SAAA,CACnCH,cAACiQ,IAAU,CAAC7K,GAAG,2BAA0BjF,SAAC,4BAC1CH,cAACkQ,IAAa,CACVhQ,UAAW/B,EAAQwN,cACnBvG,GAAG,uBACHjD,MAAO+J,EACP5G,SApGvB,SAAC6K,GAC1BzD,GAAe,GACfhC,QAAQC,IAAIwF,EAAM3K,OAAOrD,OACE,KAAvBgO,EAAM3K,OAAOrD,OACbgK,EAAuBgE,EAAM3K,OAAOrD,OACpCoF,OAEA4E,EAAuBgE,EAAM3K,OAAOrD,OACpCsM,GAAY,aA6FgC2B,YAAY,kBACZC,eACIrQ,cAACsQ,IAAc,CAACtU,SAAS,QAAOmE,SAC5BH,cAACuQ,IAAU,CAACC,OAAQ,IAAKC,KAAK,SAASvQ,UAAW/B,EAAQkS,mBAGlEK,mBAAiB,qBACjBC,WAAY,CACR,aAAc,UAElBC,WAAY,IAEf1E,GACGlM,cAAAwJ,WAAA,CAAArJ,SACKkH,EACIwJ,QAAO,SAACvH,GAAI,QAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMvI,cACxBF,KACG,SAACC,EAASiQ,GAAK,OACXtE,GACIzM,cAAC0F,IAAQ,CAELvD,MAAOrB,EAAQsE,GACf1B,KAAK,aACLwF,QAAS,kBA5GrD4H,EA6GuEhQ,EAAQgQ,aA7GjEvH,EA6G+EzI,EAAQsE,GA5GjI+G,EAAuB2E,GACvB5D,EAAa3D,QACbmD,GAAe,GAHY,IAACoE,EAAcvH,GA8G+BpJ,SAEAW,EAAQgQ,cAPJhQ,EAAQsE,cAejDpF,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAAC0P,IAAW,CAACC,WAAS,EAAC9P,UAAU,OAAMC,SAAA,CACnCH,cAACiQ,IAAU,CAAC7K,GAAG,6BAA4BjF,SAAC,qBAC5CH,cAACgR,IAAgB,CACb9Q,UAAU,OACV+Q,aAAc,GACdvN,KAAK,yBAIjB1D,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAAC0P,IAAW,CAACC,WAAS,EAAC9P,UAAU,OAAMC,SAAA,CACnCH,cAACiQ,IAAU,CAAC7K,GAAG,6BAA4BjF,SAAC,wBAC5CH,cAACgR,IAAgB,CACb9Q,UAAU,OACV+Q,aAAc,GACdvN,KAAK,4BAIjB1D,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAAC0P,IAAW,CAACC,WAAS,EAAC9P,UAAU,OAAMC,SAAA,CACnCH,cAACiQ,IAAU,CAAC7K,GAAG,6BAA4BjF,SAAC,uBAC5CH,cAACgR,IAAgB,CACb9Q,UAAU,OACV+Q,aAAc,GACdvN,KAAK,2BAIjB1D,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAAC0P,IAAW,CAACC,WAAS,EAAC9P,UAAU,OAAMC,SAAA,CACnCH,cAACiQ,IAAU,CAAC7K,GAAG,6BAA4BjF,SAAC,iBAC5CH,cAACgR,IAAgB,CACb9Q,UAAU,OACV+Q,aAAc,GACdvN,KAAK,qBAIjB1D,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAAC0P,IAAW,CAACC,WAAS,EAAC9P,UAAU,OAAMC,SAAA,CACnCH,cAACiQ,IAAU,CAAC7K,GAAG,6BAA4BjF,SAAC,gBAC5CH,cAACgR,IAAgB,CACb9Q,UAAU,OACV+Q,aAAc,GACdvN,KAAK,oBAIjB1D,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAAC0P,IAAW,CAACC,WAAS,EAAC9P,UAAU,OAAMC,SAAA,CACnCH,cAACiQ,IAAU,CAAC7K,GAAG,6BAA4BjF,SAAC,gBAC5CH,cAACgR,IAAgB,CACb9Q,UAAU,OACV+Q,aAAc,GACdvN,KAAK,oBAIjB1D,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNE,eAAC0P,IAAW,CAACC,WAAS,EAAC9P,UAAU,OAAMC,SAAA,CACnCH,cAACiQ,IAAU,CAAC7K,GAAG,6BAA4BjF,SAAC,gBAC5CH,cAACmF,IAAS,CACNjF,UAAU,OACV+Q,aAAc,GACdvP,KAAK,SACLgC,KAAK,oBAIjB1D,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAAC+P,IAAW,CAAC7P,UAAU,OAAMC,SACzBH,cAACgJ,IAAM,CAAChE,QAAQ,YAAYlJ,MAAM,UAAUmN,kBAAgB,EAACvH,KAAK,SAAQvB,SAAC,+CAalH0G,IAAW7G,cAAC2N,GAAK,CAAC9E,YAjOR,WACf0E,IAAW,UCnZbjS,EAAYC,aAAW,SAACC,GAAK,MAAM,CACrCC,KAAM,CACFC,gBAAiB,UACjBI,MAAO,OACPC,SAAU,SACVC,SAAU,WACV,UAASC,YAAA,CACLC,QAAS,KACTF,SAAU,WACVG,MAAO,QACPC,OAAQ,QACRV,gBAAiBF,EAAMG,QAAQsF,QAAQ5E,KACvCC,aAAc,MACdC,IAAK,QACLC,MAAO,SACNhB,EAAMiB,YAAYC,KAAK,MAAQ,CAC5BH,IAAK,SACLC,MAAO,WAGf,WAAUP,YAAA,CACNC,QAAS,KACTF,SAAU,WACVG,MAAO,QACPC,OAAQ,QACRV,gBAAiBF,EAAMG,QAAQsF,QAAQ5E,KACvCC,aAAc,MACdC,IAAK,SACLC,MAAO,QACPG,QAAS,IACRnB,EAAMiB,YAAYC,KAAK,MAAQ,CAC5BH,IAAK,SACLC,MAAO,WAInBN,QAAS,CACLU,QAAS,mBAEbC,OAAMC,oCAAA,GACCtB,EAAMuB,WAAWC,cACjBxB,EAAMuB,WAAWE,aAAW,IAC/BvB,gBAAiBF,EAAMG,QAAQsF,QAAQ5E,KACvCP,MAAO,OACPoB,UAAW,QAEfC,YAAWL,oCAAA,GACJtB,EAAMuB,WAAWC,cACjBxB,EAAMuB,WAAWK,cAAY,IAChC1B,gBAAiBF,EAAMG,QAAQsF,QAAQpF,KACvCC,MAAON,EAAMG,QAAQsF,QAAQ,KAC7B5D,OAAQ,IAEZC,YAAa,CACTC,SAAU,WACVC,WAAY,IACZC,YAAa,MACbP,UAAW,OACXQ,aAAc,OAElBC,WAAY,CACRJ,SAAU,SACVC,WAAY,IACZ1B,MAAON,EAAMG,QAAQsF,QAAQ,MAEjCrD,aAAYd,wBAAA,GACLtB,EAAMuB,WAAWe,aAAW,IAC/BD,OAAQ,UACRnC,gBAAiBF,EAAMG,QAAQsF,QAAQ,KACvCnF,MAAON,EAAMG,QAAQsF,QAAQ5E,OAEjC0B,WAAY,CACRC,UAAW,4BAEfC,SAAU,CACNR,YAAa,OACbF,SAAU,eAiDH2T,EA7CW,WACtB,IAAM/S,EAAU7C,IACZ8C,EAAQ,EACZC,EAAgCC,IAAMC,SAAS,MAAKC,EAAAC,YAAAJ,EAAA,GAEpD4F,GAFezF,EAAA,GAAaA,EAAA,GAEcD,mBAAS,KAAG2F,EAAAzF,YAAAwF,EAAA,GAA/CwC,EAAavC,EAAA,GAAEwC,EAAgBxC,EAAA,GAEhCsD,EAAkB,eAAA3I,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBC,IAAMC,IAAI,GAADC,OAJF,kCAIc,oBAAmBC,MAAK,SAACC,GAChDgH,EAAiBhH,EAASC,SAC3B,KAAD,mBAAAR,EAAAS,UAAAX,OACL,kBAJuB,OAAAJ,EAAAgB,MAAA,KAAAC,YAAA,GAiBxB,OAHAC,qBAAU,WACNyH,MACD,IAECxH,cAACC,IAAI,CAACC,UAAW/B,EAAQ1C,KAAK0E,SAC1BH,cAACI,IAAW,CAACF,UAAW/B,EAAQjC,QAAQiE,SACpCE,eAACC,IAAI,CAACC,WAAS,EAACC,UAAU,SAAQL,SAAA,CAC9BH,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACM,IAAI,CAACC,WAAS,EAACG,WAAW,SAAQP,SAC/BE,eAACC,IAAI,CAACG,MAAI,EAAAN,SAAA,CACNH,cAAA,OAAKW,MAAO,CAACC,QAAS,QAAQT,SAAe,OAAbsG,QAAa,IAAbA,OAAa,EAAbA,EAAe5F,KAAI,SAAC+H,GAAY,OAAKA,GAAgBxK,SACrF4B,cAACgB,IAAU,CAACd,UAAW/B,EAAQb,YAAY6C,SAAE/B,WAIzD4B,cAACM,IAAI,CAACG,MAAI,EAAAN,SACNH,cAACgB,IAAU,CAACd,UAAW/B,EAAQR,WAAWwC,SAAC,kC,+ECpH7D7E,GAAYC,aAAW,SAACC,GAAK,MAAM,CACrCC,KAAM,CACFC,gBAAiBF,EAAMG,QAAQsF,QAAQ5E,KACvCP,MAAON,EAAMG,QAAQsF,QAAQyD,MAC7B3I,SAAU,SACVC,SAAU,WACV,UAAW,CACPE,QAAS,KACTF,SAAU,WACVG,MAAO,QACPC,OAAQ,QACR+U,WAAY,6EACZ7U,aAAc,MACdC,IAAK,QACLC,MAAO,UAEX,WAAY,CACRN,QAAS,KACTF,SAAU,WACVG,MAAO,QACPC,OAAQ,QACR+U,WAAY,4EACZ7U,aAAc,MACdC,IAAK,SACLC,MAAO,WAGfN,QAAS,CACLU,QAAS,iBACTiP,YAAa,mBAEjBhP,OAAMC,oCAAA,GACCtB,EAAMuB,WAAWC,cACjBxB,EAAMuB,WAAWE,aAAW,IAC/BvB,gBAAiBF,EAAMG,QAAQsF,QAAQ,KACvCnF,MAAO,SAEXmF,QAAS,CACLnF,MAAO,QAEXyI,UAAW,CACPzI,MAAON,EAAMG,QAAQsF,QAAQyD,MAC7BxH,UAAW,OAEfN,QAAS,CACLiJ,WAAY,EACZuL,cAAe,OAqCRC,GAjCgB,SAAHxS,GAA6B,IAAxByS,EAAiBzS,EAAjByS,kBACvBnT,EAAU7C,KAEhB,OACI0E,cAACC,IAAI,CAACC,UAAW/B,EAAQ1C,KAAK0E,SAC1BH,cAACI,IAAW,CAACF,UAAW/B,EAAQjC,QAAQiE,SACpCH,cAACuR,KAAI,CAACrR,UAAW/B,EAAQvB,QAAQuD,SAC7BE,eAACmR,KAAQ,CAAC9Q,WAAW,SAAS+Q,gBAAc,EAACvR,UAAW/B,EAAQvB,QAAQuD,SAAA,CACpEH,cAAC0R,KAAc,CAAAvR,SACXH,cAAC2R,KAAM,CAAC3M,QAAQ,UAAU9E,UAAW/B,EAAQtB,OAAOsD,SAChDH,cAAC4R,KAAsB,CAACrU,SAAS,gBAGzCyC,cAAC6R,KAAY,CACT3R,UAAW/B,EAAQvB,QACnBqE,QACIZ,eAACW,IAAU,CAACgE,QAAQ,KAAK9E,UAAW/B,EAAQ8C,QAAQd,SAAA,CAC/CmR,EAAkB,UAG3B/M,UACIvE,cAACgB,IAAU,CAACgE,QAAQ,YAAY9E,UAAW/B,EAAQoG,UAAUpE,SAAC,uB,qBCvExF7E,GAAYC,aAAW,SAACC,GAAK,MAAM,CACrCU,QAAS,CACLU,QAAS,iBACTiP,YAAa,kBACbnQ,gBAAiB,UACjBI,MAAO,SAEXe,OAAMC,oCAAA,GACCtB,EAAMuB,WAAWC,cACjBxB,EAAMuB,WAAWE,aAAW,IAC/BvB,gBAAiBF,EAAMG,QAAQmW,QAAQpN,MACvC5I,MAAON,EAAMG,QAAQmW,QAAQzV,OAEjCkI,UAAW,CACPzI,MAAON,EAAMG,QAAQoW,KAAK,KAC1B7U,UAAW,OAEfN,QAAS,CACLiJ,WAAY,EACZuL,cAAe,OAqCRY,GAjCS,WACpB,IAAM7T,EAAU7C,KAEhB,OACI0E,cAACC,IAAI,CAAAE,SACDH,cAACI,IAAW,CAACF,UAAW/B,EAAQjC,QAAQiE,SACpCH,cAACuR,KAAI,CAACrR,UAAW/B,EAAQvB,QAAQuD,SAC7BE,eAACmR,KAAQ,CAAC9Q,WAAW,SAAS+Q,gBAAc,EAACvR,UAAW/B,EAAQvB,QAAQuD,SAAA,CACpEH,cAAC0R,KAAc,CAAAvR,SACXH,cAAC2R,KAAM,CAAC3M,QAAQ,UAAU9E,UAAW/B,EAAQtB,OAAOsD,SAChDH,cAACiS,KAAqB,CAAC1U,SAAS,gBAGxCyC,cAAC6R,KAAY,CACT3R,UAAW/B,EAAQvB,QACnBqE,QACIjB,cAACgB,IAAU,CAACgE,QAAQ,KAAKrE,MAAO,CAAC7E,MAAO,SAASqE,SAAC,aAItDoE,UACIvE,cAACgB,IAAU,CAACgE,QAAQ,YAAY9E,UAAW/B,EAAQoG,UAAUpE,SAAC,yB,oBCwC/E+R,GApFa,SAAHrT,GAAoE,IAA/DsT,EAAWtT,EAAXsT,YAAaC,EAAgBvT,EAAhBuT,iBAAkBC,EAAyBxT,EAAzBwT,0BACzDpO,EAAkD1F,mBAAS,IAAG2F,EAAAzF,YAAAwF,EAAA,GAAvDqN,EAAiBpN,EAAA,GAAEoO,EAAoBpO,EAAA,GACxCsC,EAAW,kCAEX+L,EAAoB,eAAA9K,EAAA3I,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAS,EAAA8S,EAAA,OAAAzT,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEEC,IAAMC,IAAI,GAADC,OAAIgH,EAAQ,qBAAoB,KAAD,GAAzD9G,EAAQP,EAAAsT,MACD9S,MAAQD,EAASC,KAAK+S,OAAS,GAClCF,EAAa9S,EAASC,KAAKD,EAASC,KAAK+S,OAAS,GAAGC,OAC3DL,EAAqBE,EAAWI,YAChCP,EAA0BG,EAAWI,aAErClI,QAAQmI,MAAM,4BAA6BnT,EAASC,MACvDR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA2T,GAAA3T,EAAA,SAEDuL,QAAQmI,MAAM,qCAAoC1T,EAAA2T,IAAS,yBAAA3T,EAAAS,UAAAX,EAAA,kBAElE,kBAbyB,OAAAwI,EAAA5H,MAAA,KAAAC,YAAA,GAmBpBiT,EAAkB,eAAA1I,EAAAvL,YAAAC,IAAAC,MAAG,SAAA0I,IAAA,OAAA3I,IAAAG,MAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,cAAAsI,EAAAvI,KAAA,EAAAuI,EAAAtI,KAAA,EAGbC,IAAM0T,KAAK,GAADxT,OAAIgH,EAAQ,oBAAoB,CAACmM,OAAQrB,IAAoB,KAAD,EAC5E5G,QAAQC,IAAI,gCAAgChD,EAAAtI,KAAA,eAAAsI,EAAAvI,KAAA,EAAAuI,EAAAmL,GAAAnL,EAAA,SAE5C+C,QAAQmI,MAAM,yBAAwBlL,EAAAmL,IAAS,wBAAAnL,EAAA/H,UAAA8H,EAAA,kBAEtD,kBARuB,OAAA2C,EAAAxK,MAAA,KAAAC,YAAA,GAcxB,OAJAC,qBAAU,WACNwS,MACD,CAACJ,IAGAnS,cAACiT,KAAK,CACFC,KAAMf,EACNgB,QAASf,EACTgB,kBAAgB,mCAChB1C,mBAAiB,yCAAwCvQ,SAEzDE,eAAA,OACIM,MAAO,CACH3E,SAAU,WACVO,IAAK,MACL8W,KAAM,MACNrV,UAAW,wBACXtC,gBAAiB,QACjBkB,QAAS,OACT0W,QAAS,QACXnT,SAAA,CAEFH,cAACgB,IAAU,CAACgE,QAAQ,KAAKI,GAAG,mCAAmC6F,cAAY,EAAA9K,SAAC,4BAG5EE,eAAA,QAAMM,MAAO,CAAC4S,UAAW,UAAWzD,SAAUiD,EAAmB5S,SAAA,CAC7DH,cAAA,OAAKW,MAAO,CAACjD,aAAc,OAAQd,QAAS,OAAOuD,SAC/CH,cAACwT,KAAK,CACF9R,KAAK,SACL0D,GAAG,uBACH1B,KAAK,uBACL0M,YAAY,qBACZjO,MAAOmP,EACPhM,SA/Cc,SAAC6K,GACnCmC,EAAqBnC,EAAM3K,OAAOrD,QA+CdxB,MAAO,CACH/D,QAAS,MACT6W,OAAQ,oBACRnX,aAAc,OACdgX,QAAS,YAIrBtT,cAACgJ,IAAM,CAAChE,QAAQ,YAAYlJ,MAAM,UAAUmN,kBAAgB,EAACvH,KAAK,SAAQvB,SAAC,2BCRhFuT,UAzDG,WACd,IAAIC,EAAUC,cACRC,EAAc,SAACC,GACjB,IAAIC,EAAI,IAAAvU,OAAOsU,GACfH,EAAQK,KAAKD,IAEjB9P,EAAoC1F,oBAAS,GAAM2F,EAAAzF,YAAAwF,EAAA,GAA5CkO,EAAWjO,EAAA,GAAE+P,EAAY/P,EAAA,GAChCC,EAAkD5F,mBAAS,IAAG6F,EAAA3F,YAAA0F,EAAA,GAAvDmN,EAAiBlN,EAAA,GAAEkO,EAAoBlO,EAAA,GAc9C,OACI/D,eAACC,IAAI,CAACC,WAAS,EAACqE,QAASC,IAAY1E,SAAA,CACjCH,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAIoP,GAAI,EAAGhL,QAAS,kBAAM2K,EAAY,aAAalT,MAAO,CAAC9C,OAAQ,WAAWsC,SACzFH,cAACmU,EAAY,MAEjBnU,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAIoP,GAAI,EAAGhL,QAAS,kBAAM2K,EAAY,YAAYlT,MAAO,CAAC9C,OAAQ,WAAWsC,SACxFH,cAACoU,EAAW,MAEhBpU,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAIoP,GAAI,EAAGhL,QAAS,kBAAM2K,EAAY,kBAAkBlT,MAAO,CAAC9C,OAAQ,WAAWsC,SAC9FH,cAACkR,EAAiB,MAEtBlR,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAIoP,GAAI,EAAE/T,SACrBE,eAACC,IAAI,CAACC,WAAS,EAACqE,QAAS,IAAIzE,SAAA,CACzBH,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAIoP,GAAI,GAAIvT,MAAO,CAAC9C,OAAQ,WAAYqL,QAzB/C,WACpB+K,GAAa,IAwB+E9T,SAC5EH,cAACqR,GAAsB,CAACC,kBAAmBA,MAE/CtR,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAIoP,GAAI,GAAIhL,QAAS,kBAAM2K,EAAY,aAAalT,MAAO,CAAC9C,OAAQ,WAAWsC,SAC1FH,cAACgS,GAAe,WAI5BhS,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAIoP,GAAI,EAAE/T,SACrBH,cAAC6D,EAAS,MAEd7D,cAACM,IAAI,CAACG,MAAI,EAACqE,GAAI,GAAIoP,GAAI,EAAE/T,SACrBH,cAACuG,EAAW,MAEhBvG,cAACkS,GAAmB,CAChBC,YAAaA,EACbC,iBArCa,WACrB6B,GAAa,IAqCL5B,0BAlC0B,SAAClQ,GACnCmQ,EAAqBnQ","file":"static/js/17.a31dbe92.chunk.js","sourcesContent":["import React from 'react';\nimport {Avatar, Card, CardContent, Grid, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\n\nimport axios from 'axios';\nimport {useEffect} from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.purple.main,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.purple.dark,\n            borderRadius: '50%',\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.purple.dark,\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.7,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.purple.dark,\n        marginTop: '8px'\n    },\n    avatarRight: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        backgroundColor: theme.palette.purple.main,\n        color: theme.palette.purple[200],\n        zIndex: 1\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '8px'\n    },\n    subHeading: {\n        fontSize: '1.5rem',\n        fontWeight: 500,\n        color: theme.palette.purple[200]\n    },\n    avatarCricle: {\n        cursor: 'pointer',\n        ...theme.typography.smallAvatar,\n        backgroundColor: theme.palette.purple[200],\n        color: theme.palette.purple.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\nconst EarningCard = () => {\n    const classes = useStyles();\n    var count = 0;\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\n    const [patients, setPatients] = React.useState([]);\n\n    const fetchPatients = async () => {\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\n            setPatients(response.data);\n        });\n    };\n\n    useEffect(() => {\n        fetchPatients();\n    }, []);\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container alignItems=\"center\">\n                            <Grid item>\n                                <div style={{display: 'none'}}>{patients?.map((patient) => !patient.is_doctor && count++)}</div>\n                                <Typography className={classes.cardHeading}>{count}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.subHeading}>Registered Patients</Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default EarningCard;\n","import React from 'react';\nimport {Avatar, Card, CardContent, Grid, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\nimport axios from 'axios';\nimport {useEffect} from 'react';\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.primary.dark,\n            borderRadius: '50%',\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.primary.dark,\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.7,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary.dark,\n        color: '#fff',\n        marginTop: '8px'\n    },\n    avatarRight: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary[200],\n        zIndex: 1\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '8px'\n    },\n    subHeading: {\n        fontSize: '1.5rem',\n        fontWeight: 500,\n        color: theme.palette.primary[200]\n    },\n    avatarCricle: {\n        ...theme.typography.smallAvatar,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary[200],\n        color: theme.palette.primary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\nconst TotalChartCard = () => {\n    const classes = useStyles();\n    var count = 0;\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\n    const [doctors, setDoctors] = React.useState([]);\n\n    const fetchDoctors = async () => {\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\n            setDoctors(response.data);\n        });\n    };\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        fetchDoctors();\n    }, []);\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container alignItems=\"center\">\n                            <Grid item>\n                                <div style={{display: 'none'}}>{doctors?.map((doctor) => doctor.is_doctor && count++)}</div>\n                                <Typography className={classes.cardHeading}>{count}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.subHeading}>Registered Doctors</Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalChartCard;\n","import value from '../../../../assets/scss/_themes-vars.module.scss';\n\nconst chartData = {\n    height: 480,\n    type: 'bar',\n    options: {\n        chart: {\n            stacked: true,\n            toolbar: {\n                show: true\n            },\n            zoom: {\n                enabled: true\n            }\n        },\n        colors: [value['deepPurple500'], value['blue500'], value['blue200'], value['deepPurple50']],\n        responsive: [\n            {\n                breakpoint: 480,\n                options: {\n                    legend: {\n                        position: 'bottom',\n                        offsetX: -10,\n                        offsetY: 0\n                    }\n                }\n            }\n        ],\n        plotOptions: {\n            bar: {\n                horizontal: false\n            }\n        },\n        xaxis: {\n            type: 'string',\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            labels: {\n                style: {\n                    colors: []\n                }\n            }\n        },\n        yaxis: {\n            labels: {\n                style: {\n                    colors: []\n                }\n            }\n        },\n        legend: {\n            show: true,\n            fontSize: '14px',\n            fontFamily: `'Roboto', sans-serif`,\n            position: 'bottom',\n            offsetX: 10,\n            labels: {\n                colors: value['grey500'],\n                useSeriesColors: false\n            },\n            markers: {\n                width: 16,\n                height: 16,\n                radius: 5\n            },\n            itemMargin: {\n                horizontal: 15,\n                vertical: 8\n            }\n        },\n        fill: {\n            type: 'solid'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        grid: {\n            show: true\n        }\n    },\n    series: [\n        {\n            name: 'Patients',\n            data: [32, 124, 32, 32, 32, 80, 32]\n        },\n        {\n            name: 'Consultations',\n            data: [32, 15, 15, 32, 64, 38, 78]\n        },\n    ]\n};\nexport default chartData;\n","import React, {useState} from 'react';\nimport {Card, CardContent, Grid, MenuItem, TextField, Typography, useTheme} from '@material-ui/core';\nimport Chart from 'react-apexcharts';\nimport barChart from './chart/bar-chart';\nimport {gridSpacing} from '../../../store/constant';\nimport axios from 'axios';\nimport {useEffect} from 'react';\n\nconst status = [\n    // {\n    //     value: 'today',\n    //     label: 'Today'\n    // },\n    {\n        value: 'month',\n        label: 'This Month'\n    },\n    {\n        value: 'year',\n        label: 'This Year'\n    }\n];\n\nconst ChartCard = () => {\n    const [value, setValue] = React.useState('month');\n    const theme = useTheme();\n    var count = 0;\n    var count2 = 0;\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\n    const [consultations, setConsultations] = useState([]);\n    const [calls, setCalls] = useState([]);\n\n    const primary = theme.palette.secondary.main;\n    barChart.options.grid.borderColor = theme.palette.primary.light;\n    barChart.options.yaxis.labels.style.colors = [theme.palette.secondary.main];\n    barChart.options.xaxis.labels.style.colors = [primary, primary, primary, primary, primary, primary, primary];\n    const fetchCalls = async () => {\n        await axios.get(`${BASE_URL}/calls/`).then((response) => {\n            setCalls(response.data);\n        });\n    };\n    useEffect(() => {\n        fetchCalls();\n    }, []);\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Grid container direction=\"column\" spacing={1}>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\">Requested Consultations</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"h3\">\n                                            <div style={{display: 'none'}}>{calls?.map((call) => call && count2++)}</div>\n                                            {count2}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\">Accepted Consultations</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"h3\">\n                                            <div style={{display: 'none'}}>{calls?.map((call) => !call.is_new && count++)}</div>\n                                            {count}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    id=\"standard-select-currency\"\n                                    select\n                                    value={value}\n                                    onChange={(e) => setValue(e.target.value)}\n                                    variant=\"outlined\"\n                                >\n                                    {status.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Chart {...barChart} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default ChartCard;\n","import React, {useState, useRef} from 'react';\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardActions,\n    CardContent,\n    Divider,\n    Grid,\n    Link,\n    makeStyles,\n    FormControl,\n    TextareaAutosize,\n    InputLabel,\n    MenuItem,\n    Typography,\n    TextField,\n    OutlinedInput,\n    InputAdornment\n} from '@material-ui/core';\nimport {IconSearch} from '@tabler/icons';\n\nimport {gridSpacing} from '../../../store/constant';\nimport axios from 'axios';\nimport {useEffect} from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\n\nimport MuiTypography from '@material-ui/core/Typography';\n\nimport SubCard from '../../../ui-component/cards/SubCard';\n\nconst useStyles = makeStyles((theme) => ({\n    cardAction: {\n        padding: '10px',\n        paddingTop: 0,\n        justifyContent: 'center'\n    },\n    primaryLight: {\n        color: theme.palette.primary[200],\n        cursor: 'pointer'\n    },\n    divider: {\n        marginTop: '12px',\n        marginBottom: '12px'\n    },\n    avatarSuccess: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.success.light,\n        color: theme.palette.success.dark,\n        marginLeft: '15px'\n    },\n    successDark: {\n        color: theme.palette.success.dark\n    },\n    avatarError: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.orange.light,\n        color: theme.palette.orange.dark,\n        marginLeft: '15px'\n    },\n    errorDark: {\n        color: theme.palette.orange.dark\n    }\n}));\n\nconst PopularCard = () => {\n    const classes = useStyles();\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\n    const [consultations, setConsultations] = useState([]);\n    const [selectedConsultation, setSelectedConsultation] = React.useState([]);\n    const [visible, setVisibility] = React.useState(false);\n    const [visibleCreateConsultation, setVisiblityCreateConsultation] = React.useState(false);\n    const [users, setUsers] = React.useState([]);\n\n    const fetchUsers = async () => {\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\n            setUsers(response.data);\n        });\n    };\n    const fetchConsultations = async () => {\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\n            setConsultations(response.data.reverse());\n        });\n    };\n    const closePopup = () => {\n        setVisibility(false);\n    };\n    const showSelectedConsultation = (consultaion) => {\n        setVisibility(true);\n        setSelectedConsultation(consultaion);\n    };\n    const formatDate = (date) => {\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\n\n        // Split the formatted date into day, month, and year parts\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\n\n        // Convert the month abbreviation to uppercase\n        const capitalizedMonth = month.toUpperCase();\n\n        // Return the formatted date with uppercase month abbreviation and desired format\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\n    };\n    const showCreatePopUp = () => {\n        setVisiblityCreateConsultation(true);\n    };\n    const hideCreatePopUp = () => {\n        setVisiblityCreateConsultation(false);\n    };\n    useEffect(() => {\n        fetchConsultations();\n        fetchUsers();\n    }, []);\n    return (\n        <Card>\n            {visible && <ShowSelectedConsultation consultation={selectedConsultation} handleClose={closePopup} />}\n            {visibleCreateConsultation && <CreateConsultation handleClose={hideCreatePopUp} />}\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"h4\">Recent Consultations</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"primary\" disableElevation onClick={showCreatePopUp}>\n                                    Create Consultation\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        {consultations.slice(0, 5).map((consultation) => (\n                            <Grid\n                                container\n                                direction=\"column\"\n                                className=\"consultations\"\n                                key={consultation.id}\n                                onClick={() => showSelectedConsultation(consultation)}\n                            >\n                                <Grid item>\n                                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                {consultation.chief_complaint}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                <Grid item>\n                                                    <Typography variant=\"subtitle1\" color=\"primary\">\n                                                        {users.map(\n                                                            (user) =>\n                                                                consultation.patient_id === user.id && (\n                                                                    <>\n                                                                        {user.full_name}\n                                                                        <br />\n                                                                        <strong style={{color: 'black'}}>\n                                                                            {formatDate(consultation.created_at)}\n                                                                        </strong>\n                                                                    </>\n                                                                )\n                                                        )}\n                                                    </Typography>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"subtitle2\" color=\"black\">\n                                        {users.map((user) => consultation.doctor_id === user.id && user.full_name)}\n                                    </Typography>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardActions className={classes.cardAction}>\n                <Link component={RouterLink} to={'/consultations'}>\n                    View All\n                </Link>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default PopularCard;\n\nconst ShowSelectedConsultation = (props) => {\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\n    const [users, setUsers] = React.useState([]);\n\n    const fetchUsers = async () => {\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\n            setUsers(response.data);\n        });\n    };\n    const formatDate = (date) => {\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\n\n        // Split the formatted date into day, month, and year parts\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\n\n        // Convert the month abbreviation to uppercase\n        const capitalizedMonth = month.toUpperCase();\n\n        // Return the formatted date with uppercase month abbreviation and desired format\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\n    };\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Card className=\"popup-container\">\n                    {console.log(props)}\n                    <CardHeader title=\"Consultation\" />\n                    <Divider />\n                    <CardContent className=\"popup-body\">\n                        <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\n                            X\n                        </Button>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={6}>\n                                <SubCard\n                                    title={users.map((user) =>\n                                        props.consultation.patient_id == user.id ? user.full_name + ' Consultation' : ''\n                                    )}\n                                >\n                                    <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\n                                        <Grid item>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Doctor name: &nbsp;\n                                                <span id=\"small-text\">\n                                                    {users.map((user) => (props.consultation.doctor_id == user.id ? user.full_name : ''))}\n                                                </span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Patient name: &nbsp;\n                                                <span id=\"small-text\">\n                                                    {users.map((user) => (props.consultation.patient_id == user.id ? user.full_name : ''))}\n                                                </span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Date: &nbsp;\n                                                <span id=\"small-text\">{formatDate(props.consultation.created_at)}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Chief Complaint: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.chief_complaint}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                History of illness: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.history_of_illness}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Review of systems: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.review_of_systems}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Examination: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.examination}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Assessment: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.assessment}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Sick leave: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.sick_leave}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Last updated: &nbsp;\n                                                <span id=\"small-text\">{formatDate(props.consultation.updated_at)}</span>\n                                            </MuiTypography>\n                                        </Grid>\n                                    </Grid>\n                                </SubCard>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n};\nconst useCustomStyles = makeStyles({\n    table: {\n        minWidth: 350\n    },\n    searchControl: {\n        width: '100%',\n        paddingRight: '8px',\n        paddingLeft: '16px',\n        marginBottom: '16px',\n        marginTop: '16px'\n    }\n});\nconst CreateConsultation = (props) => {\n    const classes = useCustomStyles();\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\n    const [users, setUsers] = React.useState([]);\n    const [patientSearchResult, setPatientSearchResult] = React.useState('');\n    const [show, setShow] = React.useState(false);\n    const [showPatient, setShowPatient] = React.useState(false);\n    const [doctorSearchResult, setDoctorSearchResult] = React.useState('');\n    const [patientId, setPatientId] = React.useState(null);\n    const [doctorId, setDoctorId] = React.useState(null);\n\n    const [visible, setVisible] = useState(false);\n    const fetchUsers = async () => {\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\n            setUsers(response.data);\n        });\n    };\n    const Popup = ({handleClose}) => {\n        const modalRef = useRef(null);\n\n        const closeWithAnimation = () => {\n            if (modalRef.current) {\n                modalRef.current.classList.add('closing');\n                modalRef.current.classList.remove('closing');\n                handleClose();\n            }\n        };\n        return (\n            <div ref={modalRef} className=\"graphpop\">\n                <div className=\"content\">\n                    <div className=\"logo-img\">\n                        <a href=\"/\">\n                            <img src={process.env.PUBLIC_URL + '/images/double-check.gif'} alt=\"\" />\n                        </a>\n                    </div>\n                    <h2>\n                        <span style={{color: '#ba8abb'}}>Consultation</span> saved <span style={{color: '#24ab94'}}>successfully!</span>\n                    </h2>\n                    <div className=\"cancel-btn\">\n                        <img src={process.env.PUBLIC_URL + '/images/cancel.png'} id=\"cancel-here\" onClick={closeWithAnimation} />\n                    </div>\n                    <div style={{display: 'none'}}>\n                        {setTimeout(() => {\n                            closeWithAnimation();\n                        }, 2000)}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n    const fetchSearch = async (user) => {\n        await axios.get(`${BASE_URL}/search?query=${user === 'patient' ? patientSearchResult : doctorSearchResult}`).then((response) => {\n            setUsers(response.data);\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        console.log(doctorId);\n        console.log(patientId);\n        var bodyFormData = new FormData();\n        bodyFormData.append('doctor_id', doctorId);\n        bodyFormData.append('patient_id', patientId);\n        bodyFormData.append('chief_complaint', e.target.chief_complaint.value);\n        bodyFormData.append('history_of_illness', e.target.history_of_illness.value);\n        bodyFormData.append('review_of_systems', e.target.review_of_systems.value);\n        bodyFormData.append('examination', e.target.examination.value);\n        bodyFormData.append('assessment', e.target.assessment.value);\n        if (e.target.medication == undefined) {\n            bodyFormData.append('medication', 'No');\n        } else {\n            bodyFormData.append('medication', e.target.medication.value);\n        }\n        if (e.target.sick_leave == undefined) {\n            bodyFormData.append('sick_leave', 0);\n        } else {\n            bodyFormData.append('sick_leave', e.target.sick_leave.value);\n        }\n        console.log(bodyFormData);\n        await axios({\n            method: 'post',\n            url: `${BASE_URL}/create-consultation/`,\n            data: bodyFormData,\n            headers: {'Content-Type': 'multipart/form-data'}\n        })\n            .then(function (response) {\n                showPopup();\n                console.log(response);\n            })\n            .catch(function (response) {\n                console.log(response);\n            });\n    };\n    const showPopup = () => {\n        setVisible(true);\n    };\n    const closePopup = () => {\n        setVisible(false);\n    };\n    const handleSearchPatients = (event) => {\n        setShowPatient(true);\n        console.log(event.target.value);\n        if (event.target.value === '') {\n            setPatientSearchResult(event.target.value);\n            fetchUsers();\n        } else {\n            setPatientSearchResult(event.target.value);\n            fetchSearch('patient');\n        }\n    };\n    const handleDoctorInputHide = (iqama_number, doctor_id) => {\n        setDoctorSearchResult(iqama_number);\n        setDoctorId(doctor_id);\n        setShow(false);\n    };\n    const handlePatientInputHide = (iqama_number, patient_id) => {\n        setPatientSearchResult(iqama_number);\n        setPatientId(patient_id);\n        setShowPatient(false);\n    };\n    const handlSearcheDoctors = (event) => {\n        console.log(event.target.value);\n        setShow(true);\n        if (event.target.value === '') {\n            setDoctorSearchResult(event.target.value);\n            fetchUsers();\n        } else {\n            setDoctorSearchResult(event.target.value);\n            fetchSearch('doctor');\n        }\n    };\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Card className=\"popup-container\">\n                    <CardHeader title=\"Consultation\" />\n                    <Divider />\n                    <CardContent className=\"popup-body overflowY\" id=\"popupCustom\">\n                        <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\n                            X\n                        </Button>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={6}>\n                                <SubCard title=\"Create Consultation\">\n                                    <form onSubmit={handleSubmit}>\n                                        <Grid container direction=\"column\" id=\"poppins\" spacing={1} className=\"overflowY\">\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-simple-select-label\">Doctor's Iqama Number:</InputLabel>\n\n                                                    <OutlinedInput\n                                                        className={classes.searchControl}\n                                                        id=\"input-search-profile\"\n                                                        name=\"doctor_id\"\n                                                        value={doctorSearchResult}\n                                                        onChange={handlSearcheDoctors}\n                                                        placeholder=\"Search Doctors\"\n                                                        startAdornment={\n                                                            <InputAdornment position=\"start\">\n                                                                <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\n                                                            </InputAdornment>\n                                                        }\n                                                        aria-describedby=\"search-helper-text\"\n                                                        inputProps={{\n                                                            'aria-label': 'weight'\n                                                        }}\n                                                        labelWidth={0}\n                                                    />\n                                                    {doctorSearchResult && (\n                                                        <>\n                                                            {users\n                                                                ?.filter((user) => user.is_doctor)\n                                                                .map(\n                                                                    (doctor) =>\n                                                                        show && (\n                                                                            <MenuItem\n                                                                                key={doctor.id}\n                                                                                onClick={() =>\n                                                                                    handleDoctorInputHide(doctor.iqama_number, doctor.id)\n                                                                                }\n                                                                            >\n                                                                                {doctor.iqama_number}\n                                                                            </MenuItem>\n                                                                        )\n                                                                )}\n                                                        </>\n                                                    )}\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-simple-select-label\">Patient's Iqama Number:</InputLabel>\n                                                    <OutlinedInput\n                                                        className={classes.searchControl}\n                                                        id=\"input-search-profile\"\n                                                        value={patientSearchResult}\n                                                        onChange={handleSearchPatients}\n                                                        placeholder=\"Search patients\"\n                                                        startAdornment={\n                                                            <InputAdornment position=\"start\">\n                                                                <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\n                                                            </InputAdornment>\n                                                        }\n                                                        aria-describedby=\"search-helper-text\"\n                                                        inputProps={{\n                                                            'aria-label': 'weight'\n                                                        }}\n                                                        labelWidth={0}\n                                                    />\n                                                    {patientSearchResult && (\n                                                        <>\n                                                            {users\n                                                                .filter((user) => !user?.is_doctor)\n                                                                .map(\n                                                                    (patient, index) =>\n                                                                        showPatient && (\n                                                                            <MenuItem\n                                                                                key={patient.id}\n                                                                                value={patient.id}\n                                                                                name=\"patient_id\"\n                                                                                onClick={() =>\n                                                                                    handlePatientInputHide(patient.iqama_number, patient.id)\n                                                                                }\n                                                                            >\n                                                                                {patient.iqama_number}\n                                                                            </MenuItem>\n                                                                        )\n                                                                )}\n                                                        </>\n                                                    )}\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Chief Complaint:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"chief_complaint\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">History of illness:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"history_of_illness\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Review of systems:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"review_of_systems\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Examination:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"examination\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Assessment:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"assessment\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Medication:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"medication\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Sick Leave:</InputLabel>\n                                                    <TextField\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        type=\"number\"\n                                                        name=\"sick_leave\"\n                                                    ></TextField>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl className=\"mt-5\">\n                                                    <Button variant=\"contained\" color=\"primary\" disableElevation type=\"submit\">\n                                                        Create Consultation\n                                                    </Button>\n                                                </FormControl>\n                                            </Grid>\n                                        </Grid>\n                                    </form>\n                                </SubCard>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            {visible && <Popup handleClose={closePopup} />}\n        </Grid>\n    );\n};\n","import React, {useState} from 'react';\nimport {Avatar, Card, CardContent, Grid, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\nimport axios from 'axios';\nimport {useEffect} from 'react';\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: '#212af3',\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.primary.dark,\n            borderRadius: '50%',\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.primary.dark,\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.7,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary.dark,\n        color: '#fff',\n        marginTop: '8px'\n    },\n    avatarRight: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary[200],\n        zIndex: 1\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '8px'\n    },\n    subHeading: {\n        fontSize: '1.5rem',\n        fontWeight: 500,\n        color: theme.palette.primary[200]\n    },\n    avatarCricle: {\n        ...theme.typography.smallAvatar,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary[200],\n        color: theme.palette.primary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\nconst ConsultationsCard = () => {\n    const classes = useStyles();\n    var count = 0;\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\n    const [consultations, setConsultations] = useState([]);\n\n    const fetchConsultations = async () => {\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\n            setConsultations(response.data);\n        });\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        fetchConsultations();\n    }, []);\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container alignItems=\"center\">\n                            <Grid item>\n                                <div style={{display: 'none'}}>{consultations?.map((consultation) => consultation && count++)}</div>\n                                <Typography className={classes.cardHeading}>{count}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.subHeading}>Total Consultations</Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default ConsultationsCard;\n","import React from 'react';\nimport {Avatar, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Typography} from '@material-ui/core';\n\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.light,\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, #90CAF9 -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, #90CAF9 -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '5px !important',\n        paddingLeft: '15px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff'\n    },\n    primary: {\n        color: '#fff'\n    },\n    secondary: {\n        color: theme.palette.primary.light,\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\nconst TotalIncomePatternCard = ({consultationCosts}) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Avatar variant=\"rounded\" className={classes.avatar}>\n                                <TableChartOutlinedIcon fontSize=\"inherit\" />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={\n                                <Typography variant=\"h4\" className={classes.primary}>\n                                    {consultationCosts} SAR\n                                </Typography>\n                            }\n                            secondary={\n                                <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                    Amount\n                                </Typography>\n                            }\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomePatternCard;\n","import React from 'react';\nimport {Avatar, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Typography} from '@material-ui/core';\n\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        padding: '5px !important',\n        paddingLeft: '15px !important',\n        backgroundColor: '#333333',\n        color: 'white'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.warning.light,\n        color: theme.palette.warning.dark\n    },\n    secondary: {\n        color: theme.palette.grey[500],\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\nconst TotalIncomeCard = () => {\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Avatar variant=\"rounded\" className={classes.avatar}>\n                                <StorefrontTwoToneIcon fontSize=\"inherit\" />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={\n                                <Typography variant=\"h4\" style={{color: 'white'}}>\n                                    Payments\n                                </Typography>\n                            }\n                            secondary={\n                                <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                    View all\n                                </Typography>\n                            }\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomeCard;\n","// UpdatePaymentAmount.js\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Modal, Typography, Input, Button} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nconst UpdatePaymentAmount = ({isModalOpen, handleModalClose, onConsultationCostsChange}) => {\r\n    const [consultationCosts, setConsultationCosts] = useState('');\r\n    const BASE_URL = 'https://backend.alsahaba.sa/api';\r\n\r\n    const getConsultationPrice = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}/payment-amount/`);\r\n            if (response.data && response.data.length > 0) {\r\n                const lastObject = response.data[response.data.length - 1].amount;\r\n                setConsultationCosts(lastObject.toString());\r\n                onConsultationCostsChange(lastObject.toString()); // Pass the value to the parent component\r\n            } else {\r\n                console.error('Unexpected response data:', response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching consultation price:', error);\r\n        }\r\n    };\r\n\r\n    const handleConsultationCostsChange = (event) => {\r\n        setConsultationCosts(event.target.value);\r\n    };\r\n\r\n    const handleUpdateAmount = async () => {\r\n        try {\r\n            // Assuming you want to send the consultationCosts as the 'amount' field in the POST request\r\n            await axios.post(`${BASE_URL}/payment-amount/`, {amount: consultationCosts});\r\n            console.log('Amount updated successfully!');\r\n        } catch (error) {\r\n            console.error('Error updating amount:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getConsultationPrice();\r\n    }, [isModalOpen]);\r\n\r\n    return (\r\n        <Modal\r\n            open={isModalOpen}\r\n            onClose={handleModalClose}\r\n            aria-labelledby=\"total-income-pattern-modal-title\"\r\n            aria-describedby=\"total-income-pattern-modal-description\"\r\n        >\r\n            <div\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    backgroundColor: 'white',\r\n                    padding: '20px',\r\n                    outline: 'none'\r\n                }}\r\n            >\r\n                <Typography variant=\"h5\" id=\"total-income-pattern-modal-title\" gutterBottom>\r\n                    Price per consultation:\r\n                </Typography>\r\n                <form style={{textAlign: 'center'}} onSubmit={handleUpdateAmount}>\r\n                    <div style={{marginBottom: '20px', padding: '5px'}}>\r\n                        <Input\r\n                            type=\"number\"\r\n                            id=\"pricePerConsultation\"\r\n                            name=\"pricePerConsultation\"\r\n                            placeholder=\"Consultation costs\"\r\n                            value={consultationCosts}\r\n                            onChange={handleConsultationCostsChange}\r\n                            style={{\r\n                                padding: '5px',\r\n                                border: '0.5px solid black',\r\n                                borderRadius: '10px',\r\n                                outline: 'none'\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" disableElevation type=\"submit\">\r\n                        Update amount\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default UpdatePaymentAmount;\r\n","// Dashboard.js\nimport React, {useState} from 'react';\nimport {Grid, Modal, Typography, Paper, Button} from '@material-ui/core';\n\nimport {gridSpacing} from '../../store/constant';\nimport PatientsCard from '../../ui-component/cards/PatientsCard';\nimport DoctorsCard from '../../ui-component/cards/DoctorsCard';\nimport ChartCard from '../../ui-component/cards/ChartCard';\nimport PopularCard from '../../ui-component/cards/PopularCard';\nimport ConsultationsCard from '../../ui-component/cards/ConsultationsCard';\nimport {useHistory} from 'react-router-dom';\nimport TotalIncomePatternCard from '../../ui-component/cards/TotalIncomePatternCard';\nimport TotalIncomeCard from '../../ui-component/cards/TotalIncomeCard';\nimport UpdatePaymentAmount from '../../ui-component/UpdatePaymentAmount';\n\nconst Dashboard = () => {\n    let history = useHistory();\n    const routeChange = (route) => {\n        let path = `/${route}`;\n        history.push(path);\n    };\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [consultationCosts, setConsultationCosts] = useState('');\n\n    const handleModalOpen = () => {\n        setModalOpen(true);\n    };\n\n    const handleModalClose = () => {\n        setModalOpen(false);\n    };\n\n    const handleConsultationCostsChange = (value) => {\n        setConsultationCosts(value);\n    };\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} md={3} onClick={() => routeChange('patients')} style={{cursor: 'pointer'}}>\n                <PatientsCard />\n            </Grid>\n            <Grid item xs={12} md={3} onClick={() => routeChange('doctors')} style={{cursor: 'pointer'}}>\n                <DoctorsCard />\n            </Grid>\n            <Grid item xs={12} md={3} onClick={() => routeChange('consultations')} style={{cursor: 'pointer'}}>\n                <ConsultationsCard />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <Grid container spacing={1.5}>\n                    <Grid item xs={12} md={12} style={{cursor: 'pointer'}} onClick={handleModalOpen}>\n                        <TotalIncomePatternCard consultationCosts={consultationCosts} />\n                    </Grid>\n                    <Grid item xs={12} md={12} onClick={() => routeChange('payments')} style={{cursor: 'pointer'}}>\n                        <TotalIncomeCard />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} md={9}>\n                <ChartCard />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <PopularCard />\n            </Grid>\n            <UpdatePaymentAmount\n                isModalOpen={isModalOpen}\n                handleModalClose={handleModalClose}\n                onConsultationCostsChange={handleConsultationCostsChange}\n            />\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}